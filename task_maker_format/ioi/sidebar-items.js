initSidebarItems({"constant":[["EVALUATION_PRIORITY","Base priority for the evaluation executions."],["GENERATION_PRIORITY","Base priority for the generation executions."],["STDERR_CONTENT_LENGTH","Maximum number of bytes of the captured standard error."],["TM_VALIDATION_FILE_NAME","The file name of the input file that the `InputValidator` has to validate. This file will be placed in the current working directory of the validation sandbox."]],"enum":[["Checker","Which tool to use to compute the score on a testcase given the input file, the correct output file and the output file to evaluate."],["InputGenerator","The source of the input files. It can either be a statically provided input file or a custom command that will generate an input file."],["InputValidator","An input file validator is responsible for checking that the input file follows the format and constraints defined by the task."],["OutputGenerator","The source of the output files. It can either be a statically provided output file or a custom command that will generate an output file."],["TaskType","The type of the task. This changes the behavior of the solutions."],["TestcaseEvaluationStatus","Status of the evaluation of a solution on a testcase."],["TestcaseGenerationStatus","Status of the generation of a testcase input and output."],["TestcaseScoreAggregator","The aggregator of testcase scores for computing the subtask score."],["UserIo","The type of communication for the solution in a communication task."]],"fn":[["make_context_booklets","Find all the `Booklet` it makes sense to build for all the provided tasks."],["make_task_booklets","Find all the `Booklet` it makes sense to build for a single task."]],"macro":[["bind_exec_io","Bind the input/output of an execution to the input and output file of a testcase. It correctly chooses if using stdin/stdout or using normal files by looking at the value set in the `Task`."]],"mod":[["italian_yaml","The `italian_yaml` format is defined by `cms` and itâ€™s the most used format in the Italian Olympiads."],["sanity_checks","Sanity checks for IOI-like tasks."]],"struct":[["BatchTypeData","The internal data of a task of type `Batch`."],["Booklet","A `Booklet` is a pdf file containing the statements of some tasks. It is compiled from a series of `.tex` files defined by `Statement` objects. The compiled pdf file is then copied somewhere."],["BookletConfig","Configuration of a `Booklet`, including the setting from the contest configuration."],["BookletDependencyState","The status of the compilation of a dependency of a booklet."],["BookletState","The status of the compilation of a booklet."],["BookletTemplate","Template to use to render the `booklet.tex` file."],["CommunicationTypeData","The internal data of a task of type `Batch`."],["ContestYAML","Part of the schema of `contest.yaml`, used for extracting the configuration of the booklet."],["IOITask","Information about a generic IOI task."],["IOITaskInfo","Task information structure."],["ScoreManager","This struct will manage the scores of a solution in a task and will emit the ui messages when a new score is ready."],["SolutionCheckOutcome","The outcome of the execution of a check on a subtask."],["SolutionEvaluationState","State of the evaluation of a solution."],["SolutionSubtaskEvaluationState","State of the evaluation of a subtask."],["SolutionTestcaseEvaluationState","State of the evaluation of a testcase."],["Statement","A statement is a `.tex` file with all the other assets included in its directory."],["StatementConfig","The configuration of a `Statement`."],["SubtaskGenerationState","State of the generation of a subtask."],["SubtaskInfo","A subtask of a IOI task."],["TaskInfoAttachment","Attachment of the task."],["TaskInfoLimits","Limits of the task."],["TaskInfoScoring","Scoring for the task."],["TaskInfoStatement","Statement of the task."],["TaskInfoSubtask","Info of the subtasks."],["TestcaseGenerationState","State of the generation of a testcases."],["TestcaseInfo","A testcase of a IOI task."],["UIState","The state of a IOI task, all the information for the UI are stored here."]],"type":[["SubtaskId","In IOI tasks the subtask numbers are non-negative 0-based integers."],["TestcaseId","In IOI tasks the testcase numbers are non-negative 0-based integers."]]});