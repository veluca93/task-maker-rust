var searchIndex = JSON.parse('{\
"task_maker":{"doc":"The new cmsMake!","t":"F","n":["main"],"q":[[0,"task_maker"]],"d":[""],"i":[0],"f":[[[]]],"c":[],"p":[]},\
"task_maker_cache":{"doc":"Crate for managing the cache of the executions of a DAG.","t":"DENNLLLLLLLLLLLLLLLLLLLLLLMM","n":["Cache","CacheResult","Hit","Miss","borrow","borrow","borrow_mut","borrow_mut","drop","fmt","from","from","get","insert","into","into","is_cacheable","new","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","outputs","result"],"q":[[0,"task_maker_cache"],[26,"task_maker_cache::CacheResult"]],"d":["Handle the cached executions, loading and storing them to …","The result of a cache query, can be either successful (<code>Hit</code>…","The requested entry is present in the cache.","The requested entry is not present in the cache.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Search in the cache for a valid entry, returning a cache …","Insert a new entry inside the cache. They key is computed …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks whether a result is allowed in the cache.","Make a new <code>Cache</code> stored in the specified cache directory. …","","","","","","","","","The outputs of the execution.","The result of the execution."],"i":[0,0,9,9,9,1,9,1,1,1,9,1,1,1,9,1,1,1,9,1,9,1,9,1,9,1,18,18],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[1],[[1,2],3],[[]],[[]],[[1,4,[7,[5,6]],8],9],[[1,4,[7,[5,6]],[11,[10]]]],[[]],[[]],[10,12],[[[14,[13]]],[[16,[1,15]]]],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[]],[[]],0,0],"c":[],"p":[[3,"Cache"],[3,"Formatter"],[6,"Result"],[3,"ExecutionGroup"],[6,"FileUuid"],[3,"FileStoreHandle"],[3,"HashMap"],[3,"FileStore"],[4,"CacheResult"],[3,"ExecutionResult"],[3,"Vec"],[15,"bool"],[3,"PathBuf"],[8,"Into"],[3,"Error"],[4,"Result"],[3,"TypeId"],[13,"Hit"]]},\
"task_maker_dag":{"doc":"DAG generation and resulting structures for <code>Execution</code>s and …","t":"ENGNNDDEDDDDDGDDDDEDGHDGDDGGGRNNNNNGGGGENNNNNNNGDLLLLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLMLMLMLMMMLLLLLLLMMMLLLLLLLLLLLLLLLMLMLMLLLLLLLLMMLMMMLMMLMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMMLLLMLMMLMLMMLLLLLLLMMLLLMMLLMLLLLMMLLMLMMLLLLLLLLLLLLLLLLLMLMLMMLMLMLMLMMLMLMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLMMMMLLMMMMMMM","n":["CacheMode","Content","DagPriority","Everything","Except","Execution","ExecutionCallbacks","ExecutionCommand","ExecutionDAG","ExecutionDAGCallbacks","ExecutionDAGConfig","ExecutionDAGData","ExecutionGroup","ExecutionGroupUuid","ExecutionInput","ExecutionLimits","ExecutionResourcesUsage","ExecutionResult","ExecutionStatus","ExecutionTag","ExecutionUuid","FIFO_SANDBOX_DIR","Fifo","FifoUuid","File","FileCallbacks","FileUuid","GetContentCallback","GetContentChunkedCallback","HIGH_PRIORITY","InternalError","Local","LocalFile","MemoryLimitExceeded","Nothing","OnDoneCallback","OnSkipCallback","OnStartCallback","Priority","ProvidedFile","ReturnCode","Signal","Success","SysTimeLimitExceeded","System","TimeLimitExceeded","WallTimeLimitExceeded","WorkerUuid","WriteToCallback","add_execution","add_execution","add_execution_group","add_extra_readable_dir","allow_failure","allow_multiprocess","allow_multiprocess","args","args","as_ref","block_multiprocess","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache_mode","cache_mode","callbacks","capture_stderr","capture_stderr","capture_stdout","capture_stdout","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","command","config","config","config","config_mut","copy_env","copy_env","copy_exe","copy_exe","copy_logs","copy_logs","cpu_time","cpu_time","cpu_time","data","default","default","default","default","default","default","dependencies","description","description","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dest","dry_run","dry_run","env","env","eq","eq","eq","eq","eq","eq","eq","eq","executable","executable","execution_callbacks","execution_callbacks","execution_groups","executions","extra_memory","extra_memory","extra_readable_dirs","extra_time","extra_time","fifo","file","file_callbacks","file_callbacks","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fsize","fsize","get_content","get_content_chunked","get_file_content","get_file_content_chunked","hash","hash","hash","input","inputs","internal_error","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_internal_error","is_success","keep_sandboxes","keep_sandboxes","limits","limits_mut","local","memlock","memlock","memory","memory","memory","mount_proc","mount_proc","mount_tmpfs","mount_tmpfs","name","new","new","new","new","new","new_fifo","nofile","nofile","on_done","on_execution_done","on_execution_skip","on_execution_start","on_skip","on_start","output","outputs","outputs","partial_cmp","priority","priority","priority","priority","priority","provide_content","provide_file","provided_files","read_only","read_only","resources","sandbox_path","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","stack","stack","status","status","stderr","stderr","stderr","stderr_redirect_path","stderr_redirect_path","stdin","stdin","stdin_redirect_path","stdin_redirect_path","stdout","stdout","stdout","stdout_redirect_path","stdout_redirect_path","sys_time","sys_time","sys_time","system","tag","tag","tag","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_script_ify","type_script_ify","type_script_ify","type_script_ify","unrestricted","urgent_file","urgent_files","urgent_files","uuid","uuid","uuid","uuid","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wall_time","wall_time","wall_time","was_cached","was_killed","write_file_to","write_file_to_allow_fail","write_to","content","file","file","key","key","local_path"],"q":[[0,"task_maker_dag"],[490,"task_maker_dag::ProvidedFile"]],"d":["The setting of the cache level.","A file that is provided from a in-memory buffer.","Type of the priority value of a DAG.","Use the cache as much as possible.","Use the cache except for these tags.","An <code>Execution</code> is a process that will be executed by a …","The callbacks to be called when an event of an execution …","Command of an <code>Execution</code> to execute.","A computation DAG, this is not serializable because it …","The set of callbacks of a DAG.","Configuration setting of an <code>ExecutionDAG</code>, some of the …","Serializable part of the execution DAG: everything except …","A group of executions that have to be executed …","The identifier of an execution group, it’s globally …","An input file of an <code>Execution</code>, can be marked as executable …","Limits on an <code>Execution</code>. On some worker platforms some of …","Resources used during the execution, note that on some …","The result of an <code>Execution</code>.","Status of a completed <code>Execution</code>.","A tag on an <code>Execution</code>. Can be used to classify the …","The identifier of an execution, it’s globally unique and …","Directory inside the sandbox where to place all the pipes …","A First-in First-out channel for letting executions …","The identifier of a Fifo pipe inside a group.","An handle to a file in the evaluation, this only tracks …","The callbacks that will trigger when the file is ready.","The identifier of a file, it’s globally unique and it …","Type of the callback called when a file is returned to the …","Type of the callback called with the chunks of a file when …","DAG-priority of executions that should run very soon, …","The sandbox failed to execute the program with the …","A command relative to the sandbox directory, not to be …","A file that is provided by the disk, knowing its path.","The program has exceeded the memory limit.","Never use the cache.","Type of the callback called when an <code>Execution</code> ends.","Type of the callback called when an <code>Execution</code> is skipped.","Type of the callback called when an <code>Execution</code> starts.","Type of the priority value of an <code>Execution</code>.","A wrapper around a <code>File</code> provided by the client, this means …","The program exited with a non-zero status code, which is …","The program stopped due to a signal, the number and the …","The program exited with status 0 within the limits.","The program hasn’t exited within the sys time limit …","A system command, the workers will search in their <code>$PATH</code> …","The program hasn’t exited within the time limit …","The program hasn’t exited within the wall time limit …","The identifier of a worker, it’s globally unique and …","Where to write the file to with some other information.","Add an execution to the DAG.","Add a new execution to the group.","Add an execution group to the DAG.","Add a directory to the list of additional readable …","Whether this file is valid even if the execution that …","Allow multiple processes.","Allow multiple processes (i.e. forking/threads).","Sets the command line arguments of the execution. Calling …","The list of command line arguments.","","Block multiple processes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the cache mode for the executions of this DAG.","The cache mode for this DAG.","The list of callbacks for the items of the DAG.","Tell the executor to include the first <code>count</code> bytes of the …","When not <code>None</code>, ask the sandbox to capture that many bytes …","Tell the executor to include the first <code>count</code> bytes of the …","When not <code>None</code>, ask the sandbox to capture that many bytes …","","","","","Clone this <code>ExecutionDAG</code>. The callbacks are not cloned, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Which command to execute.","A reference to the configuration of the underlying DAG.","A reference to the configuration of the underlying DAG.","The configuration of this DAG.","Get a mutable reference to the config of this DAG.","Add an environment variable to the execution copying the …","Environment variables to copy from the sandbox host.","Set whether to copy the executables of the compilation …","Whether to copy the executables of the compilation inside …","Set whether to copy the log files of some interesting …","Whether to copy the log files of some interesting …","Set the cpu time limit in seconds.","Limit on the userspace cpu time of the process, in seconds.","Number of seconds the process used in user space.","Serializable part of the DAG with all the executions and …","","","","Default sane values for the execution limits, the limits …","","","List of all the File dependencies of the execution, …","Description of the execution.","A textual description of the group.","Description of the file.","","","","","","","","","","","","","","","","Destination path of the file to write.","Whether to ignore all the subsequent calls to <code>write_file_to</code>…","Do not write any file inside the task directory. This …","Add an environment variable to the execution.","Environment variables to set.","","","","","","","","","Whether this file should be marked as executable.","Whether the file should be marked as executable.","Get the list of registered execution callbacks.","The callbacks of the executions.","All the executions to run.","The list of executions to run.","Set the extra memory to give to the executions before …","Extra memory to give to the sandbox before killing the …","Extra directory that can be read inside the sandbox.","Set the extra time to give to the executions before being …","Extra time to give to the sandbox before killing the …","The list of FIFO pipes to create for this group.","Uuid of the file.","Get the list of registered file callbacks.","The callbacks of the files.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Set the maximum size of the files (in bytes) the process …","Maximum size of the files (in bytes) the process can …","Callback to be called with the first bytes of the file.","Callbacks to be called with the chunks of a file ready.","Call <code>callback</code> with the first <code>limit</code> bytes of the file when …","Call <code>callback</code> with the chunks of the file when it’s …","","","","Bind a file inside the sandbox to the specified file. …","List of input files that should be put inside the sandbox.","Build a new <code>ExecutionStatus</code> as an <code>InternalError</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true only if it is …","Returns true only if it is <code>ExecutionStatus::Success</code>.","Whether to keep the sandbox directory of each execution.","Keep the sandbox directory of each execution.","Limits on the execution.","Get a mutable reference to the execution limits.","Make a new <code>ExecutionCommand::Local</code>.","Set the memlock limit.","RLIMIT_MEMLOCK","Set the memory limit in KiB.","Limit on the number of KiB the process can use in any …","Number of KiB used <em>at most</em> by the process.","Set whether the process in the sandbox can use <code>/proc</code>.","Whether the process in the sandbox can use <code>/proc</code>.","Set whether the process in the sandbox can use <code>/dev/null</code> …","Whether the process in the sandbox can use <code>/dev/null</code> and …","The name of the tag.","Make a new <code>ExecutionDAGConfig</code>.","Create an empty ExecutionDAG, without files and executions.","Create a basic <code>Execution</code> with the default limits.","Create an empty execution group.","Create a new file handle.","Create a new <code>Fifo</code> and return it.","Set the maximum number of opened file descriptors.","Limit on the number of file descriptors the process can …","The callbacks called when the execution has completed.","Add a callback that will be called when the execution ends.","Add a callback that will be called when the execution is …","Add a callback that will be called when the execution …","The callbacks called when the execution has been skipped.","The callbacks called when the execution starts.","Handle to a file produced by the execution. This should be …","List of all the File produced by the execution, including …","List of the output files that should be capture from the …","","Set the priority of this DAG.","Set the priority of this <code>Execution</code>.","Priority of this execution group. The actual value is …","Priority of this DAG.","A priority index for this execution. Higher values …","Provide the content of a file for the computation.","Provide a file for the computation.","All the files provided by the client.","Set whether the process in the sandbox is not allowed to …","Whether the process in the sandbox is not allowed to …","Resources used by the execution.","The path inside the sandbox that this pipe is mapped to.","","","","","","","","","","","","","","","","Set the stack limit.","Limit on the stack size for the process in KiB.","Compute the <code>ExecutionStatus</code> based on the result of the …","Status of the completed execution.","Handle to the standard error of the execution. This should …","Optional standard error to capture.","Captured standard error of the execution, if the capture …","Set the stderr redirection path.","When set, the standard error is redirected to this file. …","Bind the standard input to the specified file. Calling …","Optional standard input to pass to the program.","Set the stdin redirection path.","When set, the standard input is redirected from this file. …","Handle to the standard output of the execution. This …","Optional standard output to capture.","Captured standard output of the execution, if the capture …","Set the stdout redirection path.","When set, the standard output is redirected to this file. …","Set the sys time limit in seconds.","Limit on the kernels pace cpu time of the process, in …","Number of seconds the process used in kernel space.","Make a new <code>ExecutionCommand::System</code>.","Set the tag of this <code>Execution</code>.","The tag of one of the executions in this group.","The tag associated with this execution.","","","","","","","","","","","","","","","","","","Make a <code>CacheMode</code> from the command line arguments:","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Make an empty limits where all the limits are disabled. …","Mark a file as urgent. The server will try to send it as …","Get the list of urgent files.","Set of the handles of the files that should be sent to the …","Uuid of the execution.","The UUID of this <code>Fifo</code>.","The unique identifier of this group of executions.","Uuid of the file.","","","","","","","","","","","","","","","","","","","","","Set the wall time limit in seconds.","Limit on the total time of execution, in seconds. This …","Number of seconds from the start to the end of the process.","Whether the execution result come from the cache.","Whether the execution has been killed by the sandbox.","When <code>file</code> is ready it will be written to <code>path</code>. The file …","Same as <code>write_file_to</code> but allowing failures.","Destination of the file if it has to be stored in the disk …","The content of the file.","The file handle.","The file handle.","The key of the file for the lookup in the <code>FileStore</code>.","The key of the file for the lookup in the <code>FileStore</code>.","Path to the file in the client."],"i":[0,13,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,16,13,18,11,0,0,0,0,0,18,18,18,18,16,18,18,0,0,1,3,1,4,22,4,4,2,2,8,4,11,10,13,14,36,1,15,16,17,26,2,4,18,19,20,21,3,22,27,8,11,10,13,14,36,1,15,16,17,26,2,4,18,19,20,21,3,22,27,8,10,10,1,2,2,2,2,11,10,13,14,1,15,16,17,2,4,18,19,20,21,3,22,8,11,10,13,14,1,15,16,17,2,4,18,19,20,21,3,22,8,2,2,3,14,1,2,2,10,10,10,10,4,4,19,1,10,1,26,4,19,27,2,2,3,8,11,10,13,14,15,16,17,2,4,18,19,20,21,3,8,22,10,10,2,2,11,15,16,4,18,19,20,8,17,22,1,36,14,3,10,10,4,10,10,3,17,1,36,11,10,13,14,36,1,15,16,17,26,2,4,18,19,20,21,3,22,27,8,9,9,11,10,13,14,36,1,15,15,16,17,26,2,4,18,19,20,21,3,3,22,27,8,4,4,27,27,1,1,15,16,17,2,2,18,11,10,13,14,36,1,15,16,17,26,2,4,18,19,20,21,3,22,27,8,18,18,10,10,2,2,16,4,4,4,4,19,4,4,4,4,15,10,1,2,3,8,3,4,4,26,1,1,1,26,26,2,2,2,8,10,2,3,10,2,1,1,14,4,4,20,21,11,10,13,14,15,16,17,2,4,18,19,20,21,3,8,4,4,2,20,2,2,20,2,2,2,2,2,2,2,2,20,2,2,4,4,19,16,2,3,2,11,10,13,14,1,15,16,17,2,4,18,19,20,21,3,22,8,11,11,10,13,14,36,1,15,16,17,26,2,4,18,19,20,21,3,22,27,8,11,10,13,14,36,1,15,16,17,26,2,4,18,19,20,21,3,22,27,8,11,10,13,14,36,1,15,16,17,26,2,4,18,19,20,21,3,22,27,8,18,19,20,8,4,1,1,36,2,21,3,8,11,10,13,14,36,1,15,16,17,26,2,4,18,19,20,21,3,22,27,8,4,4,19,20,20,1,1,27,54,55,54,55,54,55],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2]],[[3,2],3],[[1,3]],[[4,[6,[5]]],4],0,[4,4],0,[[2,7],2],0,[8,9],[4,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[10,11],10],0,0,[[2,12],2],0,[[2,12],2],0,[11,11],[10,10],[13,13],[14,14],[1,1],[15,15],[16,16],[17,17],[2,2],[4,4],[18,18],[19,19],[20,20],[21,21],[3,3],[22,22],[8,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[2,10],[3,10],0,[1,10],[[2,[6,[23]]],2],0,[[10,24],10],0,[[10,24],10],0,[[4,25],4],0,0,0,[[],10],[[],1],[[],26],[[],4],[[],19],[[],27],[2,[[28,[9]]]],0,0,0,[29,[[30,[11]]]],[29,[[30,[10]]]],[29,[[30,[13]]]],[29,[[30,[14]]]],[29,[[30,[15]]]],[29,[[30,[16]]]],[29,[[30,[17]]]],[29,[[30,[2]]]],[29,[[30,[4]]]],[29,[[30,[18]]]],[29,[[30,[19]]]],[29,[[30,[20]]]],[29,[[30,[21]]]],[29,[[30,[3]]]],[29,[[30,[8]]]],0,[[10,24],10],0,[[2,[6,[23]],[6,[23]]],2],0,[[11,11],24],[[15,15],24],[[16,16],24],[[4,4],24],[[18,18],24],[[19,19],24],[[20,20],24],[[8,8],24],0,0,[1,[[32,[31,26]]]],0,0,0,[[10,33],10],0,0,[[10,25],10],0,0,0,[1,[[32,[9,27]]]],0,[[11,34],35],[[10,34],35],[[13,34],35],[[14,34],35],[[36,34],35],[[1,34],35],[[15,34],35],[[16,34],35],[[17,34],35],[[26,34],[[30,[37]]]],[[2,34],35],[[4,34],35],[[18,34],35],[[19,34],35],[[20,34],35],[[21,34],35],[[3,34],35],[[22,34],35],[[27,34],[[30,[37]]]],[[8,34],35],[8,9],[8,9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,3],[[]],[[]],[[]],[[]],[[4,33],4],0,0,0,[[1,[6,[9]],12,39]],[[1,[6,[9]],40]],[[15,41]],[[16,41]],[[17,41]],[[2,[6,[9]],[6,[5]],24],2],0,[[[6,[23]]],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18,24],[18,24],[[10,24],10],0,0,[2,4],[[[6,[5]]],16],[[4,33],4],0,[[4,33],4],0,0,[[4,24],4],0,[[4,24],4],0,0,[[],10],[[],1],[[[6,[23]],16],2],[[[6,[23]]],3],[[[6,[23]]],8],[3,21],[[4,42],4],0,0,[[1,31,39]],[[1,31,39]],[[1,31,39]],0,0,[[2,[0,[[6,[5]],43]]],8],[2,[[28,[9]]]],0,[[8,8],[[45,[44]]]],[[10,46],10],[[2,47],2],[3,47],0,0,[[1,8,[28,[48]]]],[[1,8,[6,[5]]],[[30,[49]]]],0,[[4,24],4],0,0,[21,5],[[11,50],30],[[10,50],30],[[13,50],30],[[14,50],30],[[15,50],30],[[16,50],30],[[17,50],30],[[2,50],30],[[4,50],30],[[18,50],30],[[19,50],30],[[20,50],30],[[21,50],30],[[3,50],30],[[8,50],30],[[4,33],4],0,[[2,42,45,19],18],0,[2,8],0,0,[[2,[6,[5]]],2],0,[[2,[6,[9]]],2],0,[[2,[6,[5]]],2],0,[2,8],0,0,[[2,[6,[5]]],2],0,[[4,25],4],0,0,[[[6,[5]]],16],[[2,15],2],[3,[[45,[15]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[45,[[45,[23]]]]],[[30,[11,49]]]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],[[52,[38]]]],[[],[[52,[38]]]],[[],[[52,[38]]]],[[],[[52,[38]]]],[[],4],[[1,[6,[9]]]],[1,[[53,[9]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[4,25],4],0,0,0,0,[[1,[6,[9]],[6,[5]],24]],[[1,[6,[9]],[6,[5]],24]],0,0,0,0,0,0,0],"c":[],"p":[[3,"ExecutionDAG"],[3,"Execution"],[3,"ExecutionGroup"],[3,"ExecutionLimits"],[3,"PathBuf"],[8,"Into"],[8,"IntoIterator"],[3,"File"],[6,"FileUuid"],[3,"ExecutionDAGConfig"],[4,"CacheMode"],[15,"usize"],[4,"ProvidedFile"],[3,"ExecutionDAGData"],[3,"ExecutionTag"],[4,"ExecutionCommand"],[3,"ExecutionInput"],[4,"ExecutionStatus"],[3,"ExecutionResourcesUsage"],[3,"ExecutionResult"],[3,"Fifo"],[3,"WriteToCallback"],[3,"String"],[15,"bool"],[15,"f64"],[3,"ExecutionCallbacks"],[3,"FileCallbacks"],[3,"Vec"],[8,"Deserializer"],[4,"Result"],[6,"ExecutionUuid"],[3,"HashMap"],[15,"u64"],[3,"Formatter"],[6,"Result"],[3,"ExecutionDAGCallbacks"],[3,"Error"],[15,"str"],[8,"FnOnce"],[8,"FnMut"],[8,"Hasher"],[15,"u32"],[8,"Debug"],[4,"Ordering"],[4,"Option"],[6,"DagPriority"],[6,"Priority"],[15,"u8"],[3,"Error"],[8,"Serializer"],[3,"TypeId"],[4,"Cow"],[3,"HashSet"],[13,"Content"],[13,"LocalFile"]]},\
"task_maker_diagnostics":{"doc":"This crate contains the code for producing human-friendly …","t":"DDDENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["CodeSpan","Diagnostic","DiagnosticContext","DiagnosticLevel","Error","Warning","add_diagnostic","as_str","as_str","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","color","default","deserialize","deserialize","deserialize","deserialize","diagnostics","eq","eq","eq","error","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_str","hash","hash","hash","into","into","into","into","level","line_number","message","new","partial_cmp","partial_cmp","print","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","warning","with_code_span","with_help","with_help_attachment","with_note"],"q":[[0,"task_maker_diagnostics"]],"d":["A <code>CodeSpan</code> represent a slice of code.","A <code>Diagnostic</code> is a message, with some extra information …","The context that contains all the emitted diagnostic …","The level of the message.","The message is an error.","The message is just a warning.","Add a new <code>Diagnostic</code> to this context.","Get the content of the span as a <code>&amp;str</code>.","Return a human-friendly version of this level.","","","","","","","","","","","","","","","","","","","The color in which this message should be printed.","","","","","","Return the list of diagnostics.","","","","Create a new <code>Diagnostic</code> with <code>DiagnosticLevel::Error</code>.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>CodeSpan</code> from the content of a file, and the …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the level of the diagnostic.","Get the 1-based line number of this span.","Get the message of this diagnostic.","Build a new, empty, <code>DiagnosticContext</code>.","","","Print this diagnostic to the formatter. This is used by …","","","","","","","","","Obtain a string (with colors) of this span.","","","","","","","","","","","","","","","Create a new <code>Diagnostic</code> with <code>DiagnosticLevel::Warning</code>.","Attach a <code>CodeSpan</code> to the diagnostic.","Attach a help message to the diagnostic.","Attach a file to the diagnostic.","Attach a note to the diagnostic."],"i":[0,0,0,0,5,5,1,3,5,3,5,2,1,3,5,2,1,3,5,2,1,3,5,2,1,3,5,5,1,3,5,2,1,1,3,5,2,2,3,5,5,2,2,1,3,5,2,1,3,3,5,2,3,5,2,1,2,3,2,1,3,5,2,3,5,2,1,3,5,2,1,3,5,2,3,5,2,1,3,5,2,1,3,5,2,1,2,2,2,2,2],"f":[0,0,0,0,0,0,[[1,2]],[3,4],[5,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,3],[5,5],[2,2],[1,1],[[]],[[]],[[]],[[]],[[3,3],6],[[5,5],6],[5,7],[[],1],[8,[[9,[3]]]],[8,[[9,[5]]]],[8,[[9,[2]]]],[8,[[9,[1]]]],[1],[[3,3],10],[[5,5],10],[[2,2],10],[[[12,[11]]],2],[[3,13],14],[[5,13],14],[[5,13],14],[[2,13],14],[[2,13],14],[[1,13],14],[[]],[[]],[[]],[[]],[[[12,[15]],[16,[4]],17,17],[[9,[3,18]]]],[[3,19]],[[5,19]],[[2,19]],[[]],[[]],[[]],[[]],[2,5],[3,17],[2,4],[[],1],[[3,3],[[20,[6]]]],[[5,5],[[20,[6]]]],[[2,13],14],[[3,21],9],[[5,21],9],[[2,21],9],[[1,21],9],[[]],[[]],[[]],[[]],[[3,5],11],[[],11],[[],11],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],22],[[],22],[[],22],[[],22],[[[12,[11]]],2],[[2,3],2],[[2,[12,[11]]],2],[[2,[24,[23]]],2],[[2,[12,[11]]],2]],"c":[],"p":[[3,"DiagnosticContext"],[3,"Diagnostic"],[3,"CodeSpan"],[15,"str"],[4,"DiagnosticLevel"],[4,"Ordering"],[4,"Color"],[8,"Deserializer"],[4,"Result"],[15,"bool"],[3,"String"],[8,"Into"],[3,"Formatter"],[6,"Result"],[3,"PathBuf"],[8,"AsRef"],[15,"usize"],[3,"Error"],[8,"Hasher"],[4,"Option"],[8,"Serializer"],[3,"TypeId"],[15,"u8"],[3,"Vec"]]},\
"task_maker_exec":{"doc":"DAG execution dispatching the tasks to the workers.","t":"DDDDDCIDDDDLLLLLLLLLLLLLLLLLLMLLLLLLLLMMLLFLLLLCMLLLLFLAALLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLAMMKLLAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLMLNDNEEDNLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMMFNNNNDDNNNEENNNNNNNNNNNNNNENELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMNNREDENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMM","n":["ClientInfo","ErrorSandboxRunner","ExecutorClient","ExecutorStatus","ExecutorWorkerStatus","RawSandboxResult","SandboxRunner","SuccessSandboxRunner","Worker","WorkerConn","WorkerCurrentJobStatus","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","connected_workers","current_job","default","default","derive_key_from_password","deserialize","deserialize","deserialize","deserialize","ductile","duration","eq","eq","eq","eq","eval_dag_locally","evaluate","executors","find_tools","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into_system_time","job","name","name","name","new","new_with_channel","proto","ready_execs","receiver","run","run","run","sandbox","sender","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_script_ify","type_script_ify","type_script_ify","type_script_ify","uuid","uuid","uuid","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","waiting_execs","work","Accepted","LocalExecutor","Rejected","RemoteEntityMessage","RemoteEntityMessageResponse","RemoteExecutor","Welcome","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deserialize","deserialize","evaluate","fmt","fmt","from","from","from","from","into","into","into","into","new","new","num_workers","serialize","serialize","start","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","name","version","find_tools_path","AskFile","AskFile","AskFile","AskFiles","ChannelFileIterator","ChannelFileSender","Done","Error","Evaluate","ExecutorClientMessage","ExecutorServerMessage","Exit","GetWork","KillJob","NotifyDone","NotifySkip","NotifyStart","ProvideFile","ProvideFile","ProvideFile","ProvideFile","Status","Status","Stop","Work","WorkerClientMessage","WorkerDone","WorkerServerMessage","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","new","next","send","send_data","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","callbacks","dag","Error","Failed","READABLE_DIRS","RawSandboxResult","Sandbox","SandboxResult","Success","Success","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deserialize","fmt","fmt","fmt","from","from","from","into","into","into","keep","kill","new","output_path","run","serialize","stderr_path","stdout_path","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","error","exit_status","resources","signal","was_killed"],"q":[[0,"task_maker_exec"],[153,"task_maker_exec::executors"],[203,"task_maker_exec::executors::RemoteEntityMessage"],[205,"task_maker_exec::find_tools"],[206,"task_maker_exec::proto"],[311,"task_maker_exec::proto::ExecutorClientMessage"],[313,"task_maker_exec::sandbox"],[360,"task_maker_exec::sandbox::SandboxResult"]],"d":["Information about a client of the scheduler.","A fake sandbox that don’t actually spawn anything and …","This is a client of the <code>Executor</code>, the client is who sends …","The current status of the <code>Executor</code>, this is sent to the …","Status of a worker of an <code>Executor</code>.","","Something able to spawn a sandbox, wait for it to exit and …","A fake sandbox that don’t actually spawn anything and …","The worker is the component that receives the work from …","An handle of the connection to the worker.","Information about the job the worker is currently doing.","","","","","","","","","","","","","","","","","","","UUID and name of the client who owns the job.","","","","","","","","","List of the connected workers with their uuid, name and if …","What the worker is currently working on.","","","Derive the encryption key from a password string.","","","","","Re-export <code>ductile</code> since it’s sensible to any version …","Since when the job started.","","","","","Evaluate a DAG locally spawning a new <code>LocalExecutor</code> with …","Begin the evaluation sending the DAG to the server, …","The supported executors.","Finds the location of the <code>task-maker-tools</code> executable.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert a status based on a <code>Duration</code> (the one sent in the …","The name of the job the worker is currently doing.","The name of the worker.","Name of the worker.","The name of the client.","Make a new worker attached to a <code>FileStore</code>, will return a …","Make a new worker with an already connected channel.","The protocol related structs and enums.","Number of executions waiting for workers.","The channel that receives messages from the server.","Spawn a sandbox with the provided configuration, set the …","","","This mod contains the sandbox-related code. It interfaces …","The channel that sends messages to the worker.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The identifier of the worker.","UUID of the worker.","Unique identifier of the client.","","","","","","","","","","Number of executions waiting for dependencies.","The worker body, this function will block until the worker …","The server accepted the connection of the client, the …","An Executor that runs locally by spawning a number of …","The server rejected the connection of the client, the …","Message sent only by remote clients and workers for …","Message sent only by the server in response of a …","An executor that accepts remote connections from clients …","Tell the remote executor the name of the client or of the …","","","","","","","","","","","Starts the Executor spawning the workers on new threads …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Make a new <code>LocalExecutor</code> based on a <code>FileStore</code> and ready to …","Make a new <code>RemoteExecutor</code>.","The number of local workers to spawn.","","","Start the executor binding the TCP sockets and waiting for …","","","","","","","","","","","","","","","","","The name of the client or of the worker.","The required version of task-maker.","Locates the <code>task-maker-tools</code> executable.","The client is asking the server to send a file. After this …","The server needs the file with that Uuid. The client must …","The worker needs a file from the server. The server should …","The worker completed the execution and produced some …","An iterator over the byte chunks sent during the file …","Utility function to send a file to a channel using <code>send_raw</code>…","The evaluation of the DAG is complete, this message will …","There was an error during the evaluation.","The client is asking to evaluate a DAG.","Messages that the client sends to the server.","Messages that the server sends to the client.","Ask the worker to exit.","The worker is ready for some job. The worker will wait for …","Stop the current worker sandbox if currently running the …","The execution has completed with that result.","The execution has been skipped.","The execution has started on a worker.","The client is providing a file. After this message there …","The server is sending a file. After this message there is …","The worker is sending a file to the server. After this …","The file the workers as asked. After this message there is …","The client is asking for the server status. After this …","The server status as asked by the client.","The client is asking to stop the evaluation. All the …","The job the worker should do. Boxed to reduce the enum …","Messages sent by the workers to the server.","The worker completed the job with this result producing …","Messages sent by the server to the worker.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new iterator over a receiver channel.","","Send a local file to a channel using <code>send_raw</code>.","Send the file content to a channel using <code>send_raw</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The list of the executions and files to keep track of.","The DAG to evaluate.","There was an error executing the sandbox.","The sandbox failed to execute the process, an error …","The list of all the system-wide readable directories …","Response of the internal implementation of the sandbox.","Wrapper around the sandbox. Cloning this struct will keep …","Result of the execution of the sandbox.","The sandbox exited successfully, the statistics about the …","The sandbox has been executed successfully.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Make the sandbox persistent, the sandbox directory won’t …","Tell the sandbox process to kill the underlying process, …","Make a new sandbox for the specified execution, copying …","Path of the file where that output file is written to (in …","Starts the sandbox and blocks the thread until the sandbox …","","Path of the file where the standard error is written to …","Path of the file where the standard output is written to …","","","","","","","","","","","","","","The error reported by the sandbox.","The exit status of the process.","Resources used by the process.","The signal that caused the process to exit.","Whether the sandbox killed the process."],"i":[0,0,0,0,0,0,0,0,0,0,0,65,29,32,2,3,4,6,7,5,65,29,32,2,3,4,6,7,5,2,2,3,4,5,2,3,4,5,4,3,6,7,0,2,3,4,5,0,2,2,3,4,5,0,65,0,0,29,32,2,3,4,6,7,5,65,29,32,2,3,4,6,7,5,65,29,32,2,3,4,6,7,5,2,2,32,3,5,29,29,0,4,32,20,6,7,0,32,2,3,4,5,2,3,4,5,29,32,65,29,32,2,3,4,6,7,5,65,29,32,2,3,4,6,7,5,65,29,32,2,3,4,6,7,5,2,3,4,5,32,3,5,65,29,32,2,3,4,6,7,5,4,29,47,0,47,0,0,0,46,48,50,46,47,48,50,46,47,46,47,48,46,47,48,50,46,47,48,50,46,47,48,50,48,46,47,50,48,50,46,47,48,50,46,47,48,50,46,47,48,50,46,47,66,66,0,21,23,37,38,0,0,23,23,21,0,0,38,37,38,23,23,23,21,23,37,38,21,23,21,38,0,37,0,55,67,21,23,37,38,55,67,21,23,37,38,21,23,37,38,21,23,37,38,21,23,37,38,21,23,37,38,55,67,21,23,37,38,55,67,21,23,37,38,55,55,55,67,67,21,23,37,38,21,23,37,38,55,67,21,23,37,38,55,67,21,23,37,38,55,67,21,23,37,38,55,67,21,23,37,38,68,68,41,60,0,0,0,0,60,41,60,41,59,60,41,59,59,59,41,60,41,59,60,41,59,60,41,59,59,59,59,59,59,41,59,59,59,60,41,59,60,41,59,60,41,59,60,41,59,69,70,70,70,70],"f":[0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[2,[1]]],[[2,[1]]]],[[[3,[1]]],[[3,[1]]]],[[[4,[1]]],[[4,[1]]]],[5,5],[[]],[[]],[[]],[[]],0,0,[[],6],[[],7],[[[9,[8]]]],[10,[[12,[[2,[11]]]]]],[10,[[12,[[3,[11]]]]]],[10,[[12,[[4,[11]]]]]],[10,[[12,[5]]]],0,0,[[[2,[13]],[2,[13]]],14],[[[3,[13]],[3,[13]]],14],[[[4,[13]],[4,[13]]],14],[[5,5],14],[[15,[17,[16]],18,[17,[16]],19,19,20]],[[15,[22,[21]],[24,[23]],[26,[25]],27],[[12,[28]]]],0,0,[[29,30],31],[[32,30],31],[[[2,[33]],30],31],[[[3,[33]],30],31],[[[4,[33]],30],31],[[6,30],31],[[7,30],31],[[5,30],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[34]]],[[2,[35]]]],0,0,0,0,[[[17,[36]],[26,[25]],[17,[16]],20],[[12,[28]]]],[[[17,[36]],[26,[25]],[17,[16]],[22,[37]],[24,[38]],[26,[20]]],[[12,[29,28]]]],0,0,0,[[39,[26,[40]]],41],[[6,39,[26,[40]]],41],[[7,39,[26,[40]]],41],0,0,[[[2,[42]],43],12],[[[3,[42]],43],12],[[[4,[42]],43],12],[[5,43],12],[[]],[[]],[[]],[[]],[[],36],[[],36],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],[[45,[8]]]],[[],[[45,[8]]]],[[],[[45,[8]]]],[[],[[45,[8]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[29,[[12,[28]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10,[[12,[46]]]],[10,[[12,[47]]]],[[48,[22,[23]],[24,[21]]],[[12,[28]]]],[[46,30],31],[[47,30],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[26,[25]],49,18,[17,[16]],20],[[12,[48,28]]]],[[[26,[25]]],50],0,[[46,43],12],[[47,43],12],[[50,[17,[36]],[17,[36]],[51,[36]],[51,[36]],49],[[12,[28]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],44],[[],44],[[],44],[[],44],[[]],[[]],[[]],[[]],0,0,[[],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21,21],[23,23],[37,37],[38,38],[[]],[[]],[[]],[[]],[10,[[12,[21]]]],[10,[[12,[23]]]],[10,[[12,[37]]]],[10,[[12,[38]]]],[[21,30],31],[[23,30],31],[[37,30],31],[[38,30],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[24,[[0,[52,53,54]]]]],[[55,[[0,[52,53,54]]]]]],[[[55,[[0,[52,53,54]]]]],51],[[[9,[56]],[22,[[0,[52,53,42]]]]],[[12,[28]]]],[[[58,[57]],[22,[[0,[52,53,42]]]]],[[12,[28]]]],[[21,43],12],[[23,43],12],[[37,43],12],[[38,43],12],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[59,59],[[]],[10,[[12,[41]]]],[[60,30],31],[[41,30],31],[[59,30],31],[[]],[[]],[[]],[[]],[[]],[[]],[59,[[12,[28]]]],[59],[[56,61,[64,[62,63]],[51,[16]]],[[12,[59,28]]]],[[59,56],16],[[59,20],[[12,[60,28]]]],[[41,43],12],[59,16],[59,16],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],44],[[],44],[[],44],[[]],[[]],[[]],0,0,0,0,0],"c":[],"p":[[8,"Clone"],[3,"WorkerCurrentJobStatus"],[3,"ExecutorWorkerStatus"],[3,"ExecutorStatus"],[3,"ClientInfo"],[3,"ErrorSandboxRunner"],[3,"SuccessSandboxRunner"],[15,"str"],[8,"AsRef"],[8,"Deserializer"],[8,"Deserialize"],[4,"Result"],[8,"PartialEq"],[15,"bool"],[3,"ExecutionDAG"],[3,"PathBuf"],[8,"Into"],[15,"usize"],[15,"u64"],[8,"SandboxRunner"],[4,"ExecutorClientMessage"],[3,"ChannelSender"],[4,"ExecutorServerMessage"],[3,"ChannelReceiver"],[3,"FileStore"],[3,"Arc"],[8,"FnMut"],[3,"Error"],[3,"Worker"],[3,"Formatter"],[6,"Result"],[3,"WorkerConn"],[8,"Debug"],[3,"Duration"],[3,"SystemTime"],[3,"String"],[4,"WorkerClientMessage"],[4,"WorkerServerMessage"],[3,"SandboxConfiguration"],[3,"AtomicU32"],[4,"RawSandboxResult"],[8,"Serialize"],[8,"Serializer"],[3,"TypeId"],[4,"Cow"],[4,"RemoteEntityMessage"],[4,"RemoteEntityMessageResponse"],[3,"LocalExecutor"],[3,"Cache"],[3,"RemoteExecutor"],[4,"Option"],[8,"Send"],[8,"Sync"],[8,"DeserializeOwned"],[3,"ChannelFileIterator"],[3,"Path"],[15,"u8"],[3,"Vec"],[3,"Sandbox"],[4,"SandboxResult"],[3,"Execution"],[6,"FileUuid"],[3,"FileStoreHandle"],[3,"HashMap"],[3,"ExecutorClient"],[13,"Welcome"],[3,"ChannelFileSender"],[13,"Evaluate"],[13,"Failed"],[13,"Success"]]},\
"task_maker_format":{"doc":"Task parsing and execution using computation DAGs.","t":"NNNNNNNDNDDNNNNNNNNNNNNNEEDEDNDNENEENNENNIDNNNENNNNLLLLLOOMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMOOMLLLLLLLLLLLLMMLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLAMLMLLLMLLLLLMLLMLMKMLLLLLLLMMMLMLMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLNNNDDDDDDENNDDNNNNRNNNRNNDDEEDNNNNENNNNRDNNDDDDNNNNDDNNNDGDNRDDDDDEEDEGDENDENNNNNLLOMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLMMLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLAMMMMMFFMMMMMLLMMMLLLLLLLLLMMMMMMMLLMMLLMLLAMLMMMMLLLLLLLLLLLLLLLLLLLLLLMMMLMMMMMMMMMMMMMMMMLMMMMMMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRFFFENNNGDDDDDDDDMMLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMMMMMMMLLMLMLMMLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLDDNENCCNNNNIDCDNNNNNNNNNNNNDDNNNDDNDNDNNDNNNNDNNNNNNNIGGEEDIEIDKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLKLLLLCCKLLLKMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDIDGDDDDLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLFLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Accepted","Accepted","Accepted","Attachments","Booklet","Checker","Checking","DATA_DIR","Evaluation","EvaluationConfig","EvaluationData","Generation","IOI","IOI","Io","MemoryLimitExceeded","MemoryLimitExceeded","None","Partial","PartialScore","PartialScore","Path","RuntimeError","RuntimeError","SanityCheckCategory","ScoreStatus","SolutionCheck","SolutionCheckResult","SolutionInfo","Solutions","SourceFile","Statement","Tag","Task","TaskFormat","TaskInfo","Terry","Terry","TestcaseEvaluationResult","TimeLimitExceeded","TimeLimitExceeded","UISender","VALID_TAGS","WallTimeLimitExceeded","WallTimeLimitExceeded","WithoutExtension","WriteBinTo","WrongAnswer","WrongAnswer","WrongAnswer","Zero","add_diagnostic","add_diagnostic","as_compact_str","as_str","as_str","bind_exec_callbacks","bind_exec_io","booklet_solutions","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_dag","check","checks","clean","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","code_span","cwrite","cwriteln","dag","default","deref","deref","deref","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","disabled_sanity_checks","dry_run","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","executable","execute","extract_check_list","find_solutions","find_task","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_score","from_str","get_sanity_check_list","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ioi","language_name","minimals","name","new","new","new","no_statement","partial_cmp","partial_cmp","partial_cmp","path","path","path","prepare","purpose","result","sanity_check_post_hook","seed","send","sender","serialize","serialize","serialize","serialize","serialize","serialize","serialize","solution_filter","solution_paths","solutions","sorted_all","subtask_name_pattern","task_info","task_root","terry","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_script_ify","ui","ui","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Accepted","AssumeValid","Batch","BatchTypeData","Booklet","BookletConfig","BookletDependencyState","BookletState","BookletTemplate","Checker","Checking","Communication","CommunicationTypeData","ContestYAML","Custom","Custom","Custom","Custom","EVALUATION_PRIORITY","Failed","Failed","FifoIo","GENERATION_PRIORITY","Generated","Generating","IOITask","IOITaskInfo","InputGenerator","InputValidator","InputValidatorGenerator","MemoryLimitExceeded","Min","None","NotAvailable","OutputGenerator","Partial","Pending","Pending","RuntimeError","STDERR_CONTENT_LENGTH","ScoreManager","Skipped","Skipped","SolutionCheckOutcome","SolutionEvaluationState","SolutionSubtaskEvaluationState","SolutionTestcaseEvaluationState","Solved","Solved","Solving","Solving","Statement","StatementConfig","StaticFile","StaticFile","StdIo","SubtaskGenerationState","SubtaskId","SubtaskInfo","Sum","TM_VALIDATION_FILE_NAME","TaskInfoAttachment","TaskInfoLimits","TaskInfoScoring","TaskInfoStatement","TaskInfoSubtask","TaskType","TestcaseEvaluationStatus","TestcaseGenerationState","TestcaseGenerationStatus","TestcaseId","TestcaseInfo","TestcaseScoreAggregator","TimeLimitExceeded","UIState","UserIo","Validated","Validating","WallTimeLimitExceeded","WhiteDiff","WrongAnswer","add_statement","apply","bind_exec_io","booklets","booklets","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_dag","build_deps","check","checker","checker","clean","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compilations","config","config","config","contest_yaml","date","date","default","default","default","dependencies","description","description","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dest","diagnostics","difficulty","difficulty","dyn_render","dyn_render_into","eq","eq","eq","equivalent","equivalent","equivalent","evaluations","executor_status","extension","fake","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font_enc","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_contest","from_str","from_task","generate","generation","generations","grader_map","has_completed","id","id","infile","infile","input_enc","input_file","input_generator","input_validator","input_validator_generator","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_close_to_limits","is_default","is_partial","is_success","is_valid","italian_yaml","language","location","location","logo","logo","make_context_booklets","make_task_booklets","manager","max_score","max_score","memory_limit","memory_limit","message","mime_type","name","name","name","new","new","new","new","new","new","new","new","new","normalized_score","num_processes","official_output_file","outfile","outfile","output_generator","output_generator","packages","path","path","path","path_of","render_into","results","run_solution_checks","sanity_check_post_hook","sanity_checks","sanity_checks","score","score","score","score","score_precision","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","show_solutions","show_summary","show_summary","size_hint","solution","solution","solutions","span","statements","status","status","status","status","subtask_id","subtasks","subtasks","success","syllabus_level","syllabus_level","task","task_info","task_type","tasks","testcase_score_aggregator","testcases","testcases","testcases","tex","time_limit","time_limit","title","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","translate_checker_message","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","ui","user_io","validation","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","VALID_SUBTASK_NAME_CHARACTER_CATEGORIES","parse_task","get_sanity_check_list","get_sanity_checks","CaseStatus","Invalid","Missing","Parsed","Seed","SolutionAlert","SolutionFeedback","SolutionFeedbackCase","SolutionOutcome","SolutionValidation","SolutionValidationCase","TerryTask","TerryTaskInfo","alerts","alerts","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_dag","cases","cases","checker","clean","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","correct","description","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","feedback","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","generator","into","into","into","into","into","into","into","into","into","is_valid","max_score","max_score","message","message","message","name","name","new","new","official_solution","path","path","sanity_check_post_hook","sanity_checks","score","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","severity","status","task_info","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","type_script_ify","ui","validation","validator","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BLUE","BOLD","Compilation","CompilationStatus","Curses","CursesDrawer","CursesUI","Diagnostic","Done","Done","Failed","FinishUI","FinishUIUtils","FrameType","GREEN","IOIBooklet","IOIBookletDependency","IOIChecker","IOIEvaluation","IOIGeneration","IOISolution","IOISubtaskScore","IOITask","IOITaskScore","IOITestcaseScore","IOIValidation","Json","JsonUI","ORANGE","Pending","Pending","Print","PrintUI","RED","Raw","RawUI","Running","SOFT_RED","ServerStatus","Silent","SilentUI","Skipped","Skipped","Solutions","Started","StdoutPrinter","StopUI","TerryChecker","TerryGeneration","TerrySolution","TerrySolutionOutcome","TerryTask","TerryValidation","UI","UIChannelReceiver","UIChannelSender","UIExecutionStatus","UIMessage","UIMessageSender","UIStateT","UIType","WriteColor","YELLOW","apply","apply_status","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","curses","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deserialize","deserialize","eq","eq","finish","finish","finish","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","get_max_len","inner_block","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_synchronous","new","new","new","new","new","new","on_message","on_message","on_message","on_message","on_message","print","print_compilations","print_diagnostic_messages","print_fail_execution_status","print_time_memory","render_block","render_server_status","reset","send","serialize","serialize","set_color","stream","supports_color","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_script_ify","type_script_ify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","result","result","stderr","stderr","stdout","stdout","result","worker","booklet","diagnostic","file","message","name","name","normalized_score","num_parts","num_steps","outcome","part","score","score","score","seed","solution","solution","solution","solution","solution","solution","solution","solution","solution","solution","solutions","status","status","status","status","status","status","status","status","status","status","status","status","status","step","subtask","subtask","subtask","subtask","subtask","subtask","subtask","task","task","testcase","testcase","testcase","testcase","testcase","testcase","BLUE","BOLD","CursesDrawer","CursesUI","FrameType","GREEN","ORANGE","RED","YELLOW","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","draw","drop","finish","from","from","from","from","from","from","from","inner_block","into","into","into","into","into","into","into","new","on_message","render_block","render_server_status","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"task_maker_format"],[304,"task_maker_format::ioi"],[1043,"task_maker_format::ioi::italian_yaml"],[1045,"task_maker_format::ioi::sanity_checks"],[1047,"task_maker_format::terry"],[1229,"task_maker_format::ui"],[1508,"task_maker_format::ui::CompilationStatus"],[1514,"task_maker_format::ui::UIExecutionStatus"],[1516,"task_maker_format::ui::UIMessage"],[1571,"task_maker_format::ui::curses"]],"d":["The solution scored 100% of the testcase.","The solution should get “Accepted” on all the …","The testcase scored the maximum amount of points.","The sanity check verifies the attachments.","Compilation of the booklet.","The sanity check verifies the checker.","Checking of a solution.","Directory where the data files are stored. It is taken …","Evaluation of a solution.","Configuration of the evaluation of a task.","The data for an evaluation, including the DAG and the UI …","Generation of a testcase.","The task is IOI-like.","The task is IOI-like.","The sanity check verifies the input/output files.","The solution exceeded the memory limit.","The solution should get “Memory Limit Exceeded” on at …","Do not write the binary anywhere.","The solution is partially correct.","The solution should get “Partial Score” on at least …","The testcase scored more than zero, but not the maximum.","Write the binary to this path, relative to the base path.","The solution crashed.","The solution should get “Runtime Error” on at least …","Category of a sanity check.","The status of a testcase that got scored.","A check to perform on a solution, against a subtask.","The expected result of a solution in a set of subtasks.","Some information about a solution.","The sanity check verifies the solutions.","Wrapper around <code>task_maker_lang::SourceFile</code> that also sends …","The sanity check verifies the statement files.","Tags of the various executions inside a IOI task.","The sanity check verifies general properties of the task.","The format of the task. A task format, providing a UI and …","Information about a parsed task, returned with the …","The task is Terry-like.","The task is Terry-like.","Result of the evaluation of a solution on a testcase.","The solution timed out.","The solution should get “Time Limit Exceeded” on at …","What can send <code>UIMessage</code>s.","The list of all the ExecutionTags used for the evaluation.","The solution exceeded the wall time limit.","The solution should get “Wallclock Time Limit Exceeded”…","Write the binary to a file in the same place as the source …","Information about where to write the binary of the …","The output is wrong.","The solution should get “Wrong Answer” on at least one …","The testcase scored zero points.","The solution should get “WrongAnswer”, “…","Add a diagnostic message to the UI.","Send a diagnostic message to the UI.","Get a compact representation of this result.","String version of this category.","Get the string representation of this <code>SolutionCheckResult</code>, …","Bind the start/done/skip callbacks of an execution to a ui …","Bind the input/output of an execution to the input and …","Include the solutions in the booklet.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add the executions required for evaluating this task to …","Check if this result is valid with respect to the actual …","The list of checks specified inside the source file.","Clean the task folder removing the files that can be …","","","","","","","","","","","","","","","","","","","","","","","Span of this check.","Write to <code>$self.stream</code>, in the color specified as second …","Write to <code>$self.stream</code>, in the color specified as second …","The DAG with the evaluation data.","","","","","","","","","","","","","List of disabled sanity check names.","Do not write any file inside the task directory.","","","","","","","","","Prepare the source file if needed and return the …","Prepare an execution of the source file, eventually adding …","Try to extract the list of <code>SolutionCheck</code> from a file.","Search all the solutions matching the provided pattern in …","Search for a valid task directory, starting from base and …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Select the correct status based on the score of a …","","Return a list of all the sanity check.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The IOI task format.","The name of the language of this solution.","Return the set of matching minimal results.","The name of this solution.","Crate a new <code>EvaluationData</code> returning the data and the …","Create a new <code>SolutionCheck</code> with the given result, that …","Make a new <code>SourceFile</code>. See <code>task_maker_lang::SourceFile</code> for …","Do not build the statement files and the booklets.","","","","Make a <code>WriteBinTo::Path</code>.","Get the root directory of the task.","The path on disk of this solution.","Prepare an execution of the source file, eventually adding …","What this category is about.","The expected result of the solution.","Hook called after the execution completed, useful for …","Force this seed in terry evaluations.","Send that <code>UIMessage</code> to the UI.","The sender of the UI.","","","","","","","","Execute only the solutions whose names start with the …","Execute only the solution with the specified paths, that …","The list of solutions to evaluate.","List all <code>SolutionCheckResult</code> sorted by …","The pattern that should match the name of the subtask to …","Get the task information.","Root directory of the task.","The Terry task format.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The UI functionality for the task formats.","Get an appropriate <code>UI</code> for this task.","","","","","","","","","","","","","","","","The solution scored 100% of the testcase.","Skip the validation and assume the input file is valid.","The solution is a single file that will be executed once …","The internal data of a task of type <code>Batch</code>.","A <code>Booklet</code> is a pdf file containing the statements of some …","Configuration of a <code>Booklet</code>, including the setting from the …","The status of the compilation of a dependency of a booklet.","The status of the compilation of a booklet.","Template to use to render the <code>booklet.tex</code> file.","Which tool to use to compute the score on a testcase given …","Checker is running.","The solution is executed in parallel with a manager and …","The internal data of a task of type <code>Batch</code>.","Part of the schema of <code>contest.yaml</code>, used for extracting …","Use a custom checker based on an executable that can …","Use a custom command to generate the input file. The file …","Use a custom command to check if the input file is valid. …","Use a custom command to generate the output file. The task …","Base priority for the evaluation executions.","The generation of the testcase has failed.","Something went wrong.","Communication is achieved by using the pipes passed in …","Base priority for the generation executions.","The input file has been generated.","The input file is generating.","Information about a generic IOI task.","Task information structure.","The source of the input files. It can either be a …","An input file validator is responsible for checking that …","A simple struct that generates input validators for a …","The solution exceeded the memory limit.","Take the minimum of all the testcases, formally:","Not an actual task.","The output generator is not available.","The source of the output files. It can either be a …","The solution is partially correct.","The generation has not started yet.","The solution has not started yet.","The solution crashed.","Maximum number of bytes of the captured standard error.","This struct will manage the scores of a solution in a task …","The generation has been skipped.","The evaluation has been skipped.","The outcome of the execution of a check on a subtask.","State of the evaluation of a solution.","State of the evaluation of a subtask.","State of the evaluation of a testcase.","The output file has been generated.","The solution exited successfully, waiting for the checker.","The output file is generating.","The solution is running.","A statement is a <code>.tex</code> file with all the other assets …","The configuration of a <code>Statement</code>.","Use the static file as input. The file will be copied …","Use the static file as output. The file will be copied …","Communication is achieved by using stdin/stdout.","State of the generation of a subtask.","In IOI tasks the subtask numbers are non-negative 0-based …","A subtask of a IOI task.","Sum the score of all the testcases, formally:","The file name of the input file that the <code>InputValidator</code> …","Attachment of the task.","Limits of the task.","Scoring for the task.","Statement of the task.","Info of the subtasks.","The type of the task. This changes the behavior of the …","Status of the evaluation of a solution on a testcase.","State of the generation of a testcases.","Status of the generation of a testcase input and output.","In IOI tasks the testcase numbers are non-negative 0-based …","A testcase of a IOI task.","The aggregator of testcase scores for computing the …","The solution timed out.","The state of a IOI task, all the information for the UI …","The type of communication for the solution in a …","The input file has been validated.","The input file is being validated.","The solution exceeded the wall time limit.","Use a built-in white diff checker that scores 1.0 if the …","The output is wrong.","Add a <code>Statement</code> to this booklet.","Apply a <code>UIMessage</code> to this state.","Bind the input/output of an execution to the input and …","The status of the booklets","The booklets to compile for this task.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build the booklet, eventually coping the final PDF to the …","Add the executions required for evaluating this task to …","Build all the dependencies of this statement, returning a …","The check that originated this outcome.","The checker to use for this task.","The result of the checker.","Clean the task folder removing the files that can be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The status of the compilations.","Return a ref to the configuration of the statement.","Configuration of the booklet.","The configuration of this evaluation.","Find and parse the contest.yaml in the provided contest …","The date of the contest.","The date of the contest.","","","","The state of all the dependencies","The description of the contest.","The description of the contest.","Textual description of the subtask.","","","","","","","","","","","","","","","","","","","","","","","","Where to copy the booklet.","Diagnostic context.","The difficulty of the task.","An integer that defines the difficulty of the task. Used …","","","","","","","","","The status of the evaluations of the solutions.","The status of the executor.","","Create a “fake” <code>IOITask</code> that will not contain any data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The font encoding of the tex file.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Build the <code>BookletConfig</code> from a contest.","","Make a new <code>StatementConfig</code> from an instance of a …","Obtain a validator for the given subtask.","Result of the generation.","The state of the generation of the testcases.","The graders registered for this task.","Whether the testcase evaluation has completed, either …","The id of the subtask.","The id of the testcase.","The input file of the task, empty for <code>stdin</code>.","The input file for the solutions, usually <code>Some(&quot;input.txt&quot;)</code>…","The input encoding of the tex file.","The generated input file UUID. This is set only after the …","The generator of the input file for this testcase.","The validator of the input file for this testcase.","The generator of validators for the various subtasks.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks whether the resources used by a solution on a …","Whether this subtask was created automatically since no …","Whether the testcase evaluation has completed with a …","Whether the testcase evaluation has completed successfully.","Check if in the provided path there could be a IOI-like …","The <code>italian_yaml</code> format is defined by <code>cms</code> and it’s the …","The language to use for this booklet, e.g. <code>&quot;english&quot;</code>.","The location of the contest.","The location of the contest.","The logo of the contest.","The logo of the contest.","Find all the <code>Booklet</code> it makes sense to build for all the …","Find all the <code>Booklet</code> it makes sense to build for a single …","The source file of the manager that communicates with the …","The maximum score of this task.","The maximum score of the subtask, must be &gt;= 0.","The memory limit of the task.","The memory limit in MiB of the execution of the solution, …","A message representing this status.","","The name of the task.","The name of the task (the short one).","The name of the subtask.","Make a new <code>Booklet</code> using the specified configuration.","Make a new <code>Statement</code> from a <code>.tex</code> file and its …","Generate the task information from the provided <code>Task</code>.","Make a new, empty, <code>SolutionEvaluationState</code>.","Make a new <code>UIState</code>.","Make a new <code>ScoreManager</code> based on the subtasks and …","Build a generator based on a generating function.","Try to make a <code>Task</code> from the specified path. Will return <code>Err</code>…","Make a new instance of <code>TestcaseInfo</code>.","Score of the subtask, normalized from 0.0 to 1.0.","Number of solution processes to spawn in parallel in a …","The generated official output file UUID. This is set only …","The output file of the task, empty for <code>stdout</code>.","The output file for the solutions, usually …","The default output generator for this task, if any.","The generator of the output file for this testcase.","Return a list of all the <code>\\\\usepackage</code> used by the statement.","Get the root directory of the task.","The path of the <code>.tex</code> file.","Path of the directory of the task.","Get the path relative to the task’s root.","","The result of the solution.","Evaluate the checks of all the solutions.","Hook called after the execution completed, useful for …","Sanity checks for IOI-like tasks.","The sanity checks attached to this task. Wrapped in Arc …","Store the score of the testcase and eventually compute the …","The score on that testcase","Score of the subtask.","Score of the solution.","The number of decimal digits when displaying the scores.","","","","","","","","","","","","","","","","","","","","","","","Whether to show the solutions in the booklet.","Whether to show the summary of the task.","<code>Some(&quot;True&quot;)</code> if the time and memory limits should be put …","","Result of the solution.","The path of the solution.","The set of solutions that will be evaluated.","The span of the definition of this subtask.","The list of <code>Statement</code>s that are included in this booklet.","Status of the generation.","The status of the execution.","The status of the execution.","The status of the execution.","The id of the subtask this outcome refers to.","The state of the evaluation of the subtasks.","The list of the subtasks.","Whether the check was successful or not.","The level of the syllabus of the task.","An integer that defines the level inside a <em>syllabus</em> (for …","The task.","Get the task information.","The type of the task.","The list of the tasks in the contest (in the correct …","The aggregator to use to compute the score of the subtask …","State of the testcases of this subtask.","The state of the evaluation of the testcases.","The testcases inside this subtask.","Return the <em>tex</em> source file of the statement, patched with …","The time limit of the task.","The time limit for the execution of the solutions, if <code>None</code> …","The title of the task.","The title of the task (the long one).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The checker may return a message to be translated. This …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get an appropriate <code>UI</code> for this task.","The type of communication for the solution in a …","Result of the validation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The set of valid Unicode General Categories for the …","Given the path to the task directory, try to parse the …","Return the list of sanity checks excluding the ones with …","Make a new <code>SanityChecks</code> for a IOI task skipping the checks …","The possible statuses of the validation of a test case.","The testcase is present but its format is invalid.","The testcase is not present in the output file.","The testcase is present and correctly parsed.","The type of the seed of a generator for an input file.","A message with an associated severity.","The feedback part of the outcome.","The feedback of a test case.","The output of the checker for a solution.","The validation part of the outcome of a solution.","The validation outcome of a test case.","Information about a generic Terry task.","Task information structure.","The alerts sent by the checker regarding the validation.","The alerts sent by the checker regarding the feedback.","","","","","","","","","","","","","","","","","","","Add the executions required for evaluating this task to …","The validation of the test cases, in the same order as the …","The feedback of each testcase, in the same order as the …","The checker of input/output files of this task.","Clean the task folder removing the files that can be …","","","","","","","","","","","","","","","","","","","Whether this testcase is correct.","The title of the task (the long one).","The title of the task (the long one).","","","","","","","","","","The feedback outcome of the solution.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The generator of input files of this task.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check if in the provided path there could be a Terry-like …","The maximum score for this task.","The maximum score for this task.","An optional message associated to the test case.","An optional message associated to the test case.","The content of the alert.","The name of the task (the short one).","The name of the task (the short one).","Generate the task information from the provided <code>Task</code>.","Try to make a <code>Task</code> from the specified path. Will return <code>Err</code>…","The official solution of this task, if any. Will be …","Get the root directory of the task.","Path of the directory of the task.","Hook called after the execution completed, useful for …","The sanity checks attached to this task. Wrapped in Arc …","The score normalized from 0.0 to 1.0.","","","","","","","","","","The severity of the alert message.","The status of the testcase.","Get the task information.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get an appropriate <code>UI</code> for this task.","The validation outcome of the solution.","The validator of input files of this task.","","","","","","","","","","The BLUE color to use with <code>cwrite!</code> and <code>cwriteln!</code>","The bold style to use with <code>cwrite!</code> and <code>cwriteln!</code>","An update on the compilation status.","The status of the compilation of a file.","The <code>CursesUI</code>.","","","A diagnostic message has been emitted.","The <code>Execution</code> has been completed.","The compilation has completed.","The compilation has failed.","UI that prints to <code>stdout</code> the ending result of the …","Collection of utilities for drawing the finish UI.","","The GREEN color to use with <code>cwrite!</code> and <code>cwriteln!</code>","The compilation of a booklet.","The compilation of a dependency of a booklet. It can be …","The checking of a solution in a IOI task.","The evaluation of a solution in a IOI task.","The generation of a testcase in a IOI task.","The solution of a testcase in a IOI task.","The score of a subtask is ready.","The information about the task which is being run.","The score of a task is ready.","The score of a testcase is ready.","The validation of a testcase in a IOI task.","The <code>JsonUI</code>.","This UI will print to stdout the UI messages as json.","The ORANGE color to use with <code>cwrite!</code> and <code>cwriteln!</code>.","The <code>Execution</code> is known to the DAG and when all its …","The compilation is known but it has not started yet.","The <code>PrintUI</code>.","A simple UI that will print to stdout the human readable …","The RED color to use with <code>cwrite!</code> and <code>cwriteln!</code>","The <code>RawUI</code>.","This UI will print to stdout all the raw information it …","The compilation is running on a worker.","The RED color to use with <code>cwrite!</code> and <code>cwriteln!</code>, without …","An update on the status of the executor.","The <code>SilentUI</code>.","This UI will never print anything.","At least one of its dependencies have failed, the <code>Execution</code>…","The compilation has been skipped.","The list of solutions that will be evaluated.","The <code>Execution</code> has been started on a worker.","A simple printer that outputs to stdout. This can be used …","A message asking the UI to exit.","The checking of a solution in a Terry task.","The generation of a testcase in a Terry task.","The solution of a testcase in a Terry task.","The outcome of a solution in a Terry task.","The information about the task which is being run.","The validation of a testcase in a Terry task.","The trait that describes the UI functionalities.","Channel type for receiving <code>UIMessage</code>s.","Channel type for sending <code>UIMessage</code>s.","The status of an execution.","A message sent to the UI.","The sender of the UIMessage","The state of a task, all the information for the UI are …","The type of the UI to use, it enumerates all the known UI …","This trait describes the behavior of writers that support …","The YELLOW color to use with <code>cwrite!</code> and <code>cwriteln!</code>","Apply a <code>UIMessage</code> to this state.","Apply to this <code>CompilationStatus</code> a new <code>UIExecutionStatus</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Utilities for writing UIs with Curses.","","","","","","","","","","","","","","","","Print the final results using a finish UI.","Make the UI print the ending results.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Find the maximum length of the solutions name from the …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if and only if the underlying writer must …","Make a new PrintUI.","Make a new <code>FinishUIUtils</code> borrowing a <code>StandardStream</code>.","Make a new <code>JsonUI</code>.","Make a new RawUI.","Make a new SilentUI.","Make a new pair of UIMessageSender and ChannelReceiver.","Process a new UI message.","","","","","Print the final state of the UI.","Print all the compilation statuses.","Print the diagnostics.","Print a message for the non-successful variants of the …","Print the time and memory usage of an execution.","","","Reset the current color settings to their original …","Send a message to the channel.","","","Set the color settings of the writer.","The actual stream.","Returns true if and only if the underlying writer supports …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The result of the compilation.","The result of the compilation.","The standard error of the compilation.","The standard error of the compilation.","The standard output of the compilation.","The standard output of the compilation.","The result of the execution.","The UUID of the worker.","The name of the booklet.","The diagnostic message.","The compilation of this file.","The message associated with the score.","The name of the booklet.","The name of the dependency.","The normalized score, a value between 0 and 1","The number of the parts the evaluation of this solution is …","The number of steps of the compilation of this dependency.","The outcome of the solution. <code>Err</code> is caused by an invalid …","The index of the piece of evaluation of this solution.","The score of the testcase.","The score of the subtask.","The score of the task.","The seed used to generate the input file.","The path of the solution.","The path of the solution.","The path of the solution.","The path of the solution.","The path of the solution.","The path of the solution.","The path of the solution.","The path of the solution.","The path of the solution.","The path of the solution.","The information of the solutions to evaluate.","The status of the executor.","The status of the compilation.","The status of the generation.","The status of the validation.","The status of the solution.","The status of the solution.","The status of the solution. Note that a failure of this …","The status of the compilation.","The status of this step.","The status of the generation.","The status of the validation.","The status of the solution.","The status of the checker.","The index (0-based) of the step of this compilation.","The id of the subtask.","The id of the subtask.","The id of the subtask.","The id of the subtask.","The id of the subtask.","The id of the subtask.","The id of the subtask.","The task information.","The task information.","The id of the testcase.","The id of the testcase.","The id of the testcase.","The id of the testcase.","The id of the testcase.","The id of the testcase.","Blue color.","Bold.","A drawer for the frames of the UI.","A generic animated UI for tasks, dynamically refreshing …","The type of the terminal with its backend.","Green color.","Orange color.","Red color.","Yellow color.","","","","","","","","","","","","","","","","","","","","","Draw a frame of the UI using the provided state, onto the …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the rect of the inner rect of a block with the borders.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Make a new generic <code>CursesUI</code>.","","Render a block with the specified title.","Draw the server status block.","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[13,5,15,7,147,7,147,0,147,0,0,147,8,16,7,13,5,42,13,5,15,42,13,5,0,0,0,0,0,7,0,7,0,7,0,0,8,16,0,13,5,0,0,13,5,42,0,13,5,15,5,1,148,5,7,5,0,0,9,147,1,42,7,11,12,13,5,14,18,8,15,21,16,9,147,1,42,7,11,12,13,5,14,18,8,15,21,16,9,8,5,11,8,7,11,12,13,5,14,8,15,16,9,7,11,12,13,5,14,8,15,16,9,7,5,12,0,0,1,9,14,18,21,14,11,12,13,5,14,8,16,9,9,7,13,5,15,7,13,5,15,14,14,12,9,0,7,11,12,13,5,14,8,15,16,9,147,1,42,7,11,12,13,5,14,18,8,8,8,15,21,16,9,15,5,0,7,13,5,15,147,1,42,7,11,12,13,5,14,18,8,15,21,16,9,0,11,5,11,1,12,14,9,7,13,5,42,8,11,14,7,12,8,9,148,1,11,12,13,5,14,8,16,9,9,1,5,12,8,1,0,7,11,12,13,5,14,8,15,16,9,147,1,42,7,11,12,13,5,14,18,8,15,21,16,9,147,1,42,7,11,12,13,5,14,18,8,15,21,16,9,147,1,42,7,11,12,13,5,14,18,8,15,21,16,9,16,0,8,147,1,42,7,11,12,13,5,14,18,8,15,21,16,9,73,58,63,0,0,0,0,0,0,0,73,63,0,0,56,57,58,59,0,72,73,61,0,72,72,0,0,0,0,0,73,64,63,59,0,73,72,73,73,0,0,72,73,0,0,0,0,72,73,72,73,0,0,57,59,61,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,73,0,0,72,72,73,56,73,52,54,0,54,36,56,57,58,59,60,61,62,63,64,55,89,52,86,65,53,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,54,81,82,83,36,84,85,56,57,58,59,60,61,62,63,64,55,89,52,86,65,53,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,54,81,82,83,36,84,85,52,36,53,81,60,76,36,56,57,58,59,60,61,62,63,64,55,52,65,53,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,54,81,82,83,36,84,85,56,57,58,59,60,61,62,63,64,55,52,65,53,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,54,81,82,83,36,84,85,54,53,52,54,55,55,86,55,65,83,80,55,86,84,56,57,58,59,60,61,62,63,64,55,52,86,65,53,66,67,68,69,70,71,36,84,85,52,54,65,36,89,89,61,72,73,61,72,73,54,54,89,36,54,56,57,58,59,60,61,62,63,64,55,89,52,86,65,53,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,54,81,82,83,36,84,85,55,56,57,58,59,60,61,62,63,64,55,89,52,86,65,53,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,54,81,82,83,36,84,85,55,64,65,83,74,54,36,73,84,85,65,36,55,85,85,85,36,56,57,58,59,60,61,62,63,64,55,89,52,86,65,53,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,54,81,82,83,36,84,85,76,84,73,73,36,0,55,55,86,55,86,0,0,62,54,84,65,36,73,89,65,36,84,52,53,66,78,54,82,83,36,85,77,62,85,65,36,60,85,53,36,53,36,36,89,76,54,36,0,36,82,76,77,78,36,56,57,58,59,60,61,62,63,64,55,52,65,53,66,67,68,69,70,71,36,84,85,55,55,86,89,74,81,54,84,52,74,76,79,80,81,78,36,81,65,36,54,36,36,86,36,75,77,84,53,65,36,65,36,56,57,58,59,60,61,62,63,64,55,52,65,53,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,54,81,82,83,36,84,85,89,56,56,57,58,59,60,61,62,63,64,55,89,52,86,65,53,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,54,81,82,83,36,84,85,56,57,58,59,60,61,62,63,64,55,89,52,86,65,53,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,54,81,82,83,36,84,85,56,57,58,59,60,61,62,63,64,55,89,52,86,65,53,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,54,81,82,83,36,84,85,56,57,58,59,60,61,62,63,64,55,52,65,53,66,67,68,69,70,71,36,84,85,36,62,74,56,57,58,59,60,61,62,63,64,55,89,52,86,65,53,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,54,81,82,83,36,84,85,0,0,0,0,0,105,105,105,0,0,0,0,0,0,0,0,0,103,106,101,37,102,103,104,105,106,107,108,101,37,102,103,104,105,106,107,108,37,103,106,37,37,101,37,102,103,104,105,106,107,108,101,37,102,103,104,105,106,107,108,107,101,37,101,37,102,103,104,105,106,107,108,102,101,37,102,103,104,105,106,107,108,101,37,102,103,104,105,106,107,108,37,101,37,102,103,104,105,106,107,108,37,101,37,104,107,108,101,37,101,37,37,37,37,37,37,102,101,37,102,103,104,105,106,107,108,108,104,37,101,37,102,103,104,105,106,107,108,101,37,102,103,104,105,106,107,108,101,37,102,103,104,105,106,107,108,101,37,102,103,104,105,106,107,108,101,37,102,103,104,105,106,107,108,37,102,37,101,37,102,103,104,105,106,107,108,0,0,44,0,48,0,0,44,110,109,109,0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,48,0,0,110,109,48,0,0,48,0,109,0,44,48,0,110,109,44,110,0,44,44,44,44,44,44,44,0,0,0,0,0,0,0,0,0,0,123,109,124,127,111,112,113,114,44,115,117,118,119,120,121,122,110,109,98,48,124,127,111,112,113,114,44,115,117,118,119,120,121,122,110,109,98,48,44,110,109,48,44,110,109,48,0,111,112,113,114,115,117,118,119,120,121,122,44,110,110,109,123,50,124,112,113,114,44,110,109,98,48,124,127,111,112,113,114,44,115,117,118,119,120,121,122,110,109,98,48,48,127,0,124,127,111,112,113,114,44,115,117,118,119,120,121,122,110,109,98,48,149,124,127,112,113,114,98,50,124,112,113,114,142,127,127,127,127,0,0,149,98,44,110,149,111,149,44,110,109,48,124,127,111,112,113,114,44,115,117,118,119,120,121,122,110,109,98,48,124,127,111,112,113,114,44,115,117,118,119,120,121,122,110,109,98,48,124,127,111,112,113,114,44,115,117,118,119,120,121,122,110,109,98,48,44,110,124,127,111,112,113,114,44,115,117,118,119,120,121,122,110,109,98,48,150,151,150,151,150,151,152,153,154,155,156,157,158,154,159,160,154,161,160,157,159,162,163,160,164,157,159,162,163,165,166,167,161,168,169,156,170,171,172,160,164,158,154,163,165,166,167,154,170,171,172,160,164,157,159,173,174,170,171,172,160,164,157,0,0,0,0,0,0,0,0,0,143,132,134,135,136,137,138,143,132,134,135,136,137,138,132,134,135,136,137,138,141,143,143,143,132,134,135,136,137,138,0,143,132,134,135,136,137,138,143,143,0,0,143,132,134,135,136,137,138,143,132,134,135,136,137,138,143,132,134,135,136,137,138,143,132,134,135,136,137,138],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],[[4,[3]]]],[2,[[4,[3]]]],[5,6],[7,6],[5,6],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[8,1,9],[[4,[3]]]],[5,10],0,[8,[[4,[3]]]],[7,7],[11,11],[12,12],[13,13],[5,5],[14,14],[8,8],[15,15],[16,16],[9,9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[7,7],17],[[5,5],17],0,0,0,0,[[],9],[14],[18,[[20,[19]]]],[21,22],[14],[23,[[4,[11]]]],[23,[[4,[12]]]],[23,[[4,[13]]]],[23,[[4,[5]]]],[23,[[4,[14]]]],[23,[[4,[8]]]],[23,[[4,[16]]]],0,0,[[7,7],10],[[13,13],10],[[5,5],10],[[15,15],10],[[],10],[[],10],[[],10],[[],10],[[14,1],[[4,[24,3]]]],[[14,1,[25,[6]],26],[[4,[27,3]]]],[[[25,[28]],1],[[4,[[20,[12]],3]]]],[[9,28,[20,[6]],[31,[[30,[29]]]],1],[[20,[0]]]],[[[31,[22]],32,9],[[33,[8]]]],[[7,34],35],[[11,34],35],[[12,34],35],[[13,34],35],[[5,34],35],[[14,34],35],[[8,34],35],[[15,34],35],[[16,34],35],[[9,34],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36,8],[[]],[37,8],[[]],[[]],[[]],[[]],[[38,38],15],[6,[[4,[5]]]],[[],20],[[7,39]],[[13,39]],[[5,39]],[[15,39]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[5],0,[[[40,[22]]]],[[5,[40,[19]],41],12],[[[40,[22]],[40,[22]],[40,[19]],[31,[[30,[29]]]],[31,[[40,[22]]]]],[[31,[14]]]],0,[[7,7],[[31,[17]]]],[[13,13],[[31,[17]]]],[[5,5],[[31,[17]]]],[[[40,[22]]],42],[8,28],0,[[14,1],[[4,[[31,[43]],3]]]],[7,6],0,[[8,1],[[4,[3]]]],0,[44,[[4,[3]]]],0,[[11,45],4],[[12,45],4],[[13,45],4],[[5,45],4],[[14,45],4],[[8,45],4],[[16,45],4],0,0,0,[[]],0,[8,[[4,[16,3]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],[[47,[6]]]],0,[[8,48,49],[[4,[[51,[50]],3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[52,53]],[[54,44]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[52,1],[[4,[3]]]],[[36,1,9],[[4,[3]]]],[[53,1,6,55],[[4,[20,3]]]],0,0,0,[36,[[4,[3]]]],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[55,55],[52,52],[65,65],[53,53],[66,66],[67,67],[68,68],[69,69],[70,70],[71,71],[72,72],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[54,54],[81,81],[82,82],[83,83],[36,36],[84,84],[85,85],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[53,65],0,0,[[[40,[22]]],[[31,[[4,[86,3]]]]]],0,0,[[],55],[[],65],[[],83],0,0,0,0,[23,[[4,[56]]]],[23,[[4,[57]]]],[23,[[4,[58]]]],[23,[[4,[59]]]],[23,[[4,[60]]]],[23,[[4,[61]]]],[23,[[4,[62]]]],[23,[[4,[63]]]],[23,[[4,[64]]]],[23,[[4,[55]]]],[23,[[4,[52]]]],[23,[[4,[86]]]],[23,[[4,[65]]]],[23,[[4,[53]]]],[23,[[4,[66]]]],[23,[[4,[67]]]],[23,[[4,[68]]]],[23,[[4,[69]]]],[23,[[4,[70]]]],[23,[[4,[71]]]],[23,[[4,[36]]]],[23,[[4,[84]]]],[23,[[4,[85]]]],0,0,0,0,[[],[[4,[19,87]]]],[88,[[4,[87]]]],[[61,61],10],[[72,72],10],[[73,73],10],[[],10],[[],10],[[],10],0,0,[[],[[31,[6]]]],[[],36],[54],[[56,34],35],[[57,34],35],[[58,34],35],[[59,34],35],[[60,34],35],[[61,34],35],[[62,34],35],[[63,34],35],[[64,34],35],[[55,34],35],[[89,34],35],[[52,34],35],[[86,34],35],[[65,34],35],[[53,34],35],[[66,34],35],[[67,34],35],[[68,34],35],[[69,34],35],[[70,34],35],[[71,34],35],[[72,34],35],[[73,34],35],[[74,34],35],[[75,34],35],[[76,34],35],[[77,34],35],[[78,34],35],[[79,34],35],[[80,34],35],[[54,34],35],[[81,34],35],[[82,34],35],[[83,34],35],[[36,34],35],[[84,34],35],[[85,34],35],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[40,[19]],[40,[22]],10],[[4,[55,3]]]],[6,[[4,[64]]]],[36,65],[[83,[31,[90]]],58],0,0,0,[73,10],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[76,[31,[38]],38,[31,[91]],38],10],0,[73,10],[73,10],[[[25,[28]]],10],0,0,0,0,0,0,[9,[[4,[[20,[52]],3]]]],[[36,9],[[4,[[20,[52]],3]]]],0,0,0,0,0,[73,19],[[],6],0,0,0,[[55,[40,[22]]],52],[[[40,[22]],65],[[4,[53,3]]]],[36,[[4,[66,3]]]],[36,78],[[36,49],54],[36,82],[[[0,[92,93,94]]],83],[[[25,[28]],9],[[4,[36,3]]]],[[95,57,58,59],85],0,0,0,0,0,0,0,[53,[[20,[19]]]],[36,28],0,0,[[36,28],28],[[89,[0,[88,96]]],97],0,[54,[[20,[81]]]],[[36,1],[[4,[3]]]],0,0,[[82,90,95,38,19,[30,[[99,[98]]]],22],[[4,[3]]]],0,0,0,0,[[56,45],4],[[57,45],4],[[58,45],4],[[59,45],4],[[60,45],4],[[61,45],4],[[62,45],4],[[63,45],4],[[64,45],4],[[55,45],4],[[52,45],4],[[65,45],4],[[53,45],4],[[66,45],4],[[67,45],4],[[68,45],4],[[69,45],4],[[70,45],4],[[71,45],4],[[36,45],4],[[84,45],4],[[85,45],4],0,0,0,[[],100],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[36,[[4,[16,3]]]],0,0,0,0,0,0,[53,19],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[19,19],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],[[47,[6]]]],[[],[[47,[6]]]],[[],[[47,[6]]]],[[],[[47,[6]]]],[[],[[47,[6]]]],[[],[[47,[6]]]],[[],[[47,[6]]]],[[],[[47,[6]]]],[[],[[47,[6]]]],[[],[[47,[6]]]],[[],[[47,[6]]]],[[],[[47,[6]]]],[[],[[47,[6]]]],[[],[[47,[6]]]],[[],[[47,[6]]]],[[],[[47,[6]]]],[[],[[47,[6]]]],[[],[[47,[6]]]],[[],[[47,[6]]]],[[],[[47,[6]]]],[[],[[47,[6]]]],[[],[[47,[6]]]],[[36,48,49],[[4,[[51,[50]],3]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[25,[28]],9],[[4,[36,3]]]],[[],[[20,[[51,[0]]]]]],[[],[[0,[36]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[37,1,9],[[4,[3]]]],0,0,0,[37,[[4,[3]]]],[101,101],[37,37],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[23,[[4,[101]]]],[23,[[4,[37]]]],[23,[[4,[102]]]],[23,[[4,[103]]]],[23,[[4,[104]]]],[23,[[4,[105]]]],[23,[[4,[106]]]],[23,[[4,[107]]]],[23,[[4,[108]]]],0,[[101,34],35],[[37,34],35],[[102,34],35],[[103,34],35],[[104,34],35],[[105,34],35],[[106,34],35],[[107,34],35],[[108,34],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[25,[28]]],10],0,0,0,0,0,0,0,[37,[[4,[101,3]]]],[[[25,[28]],9],[[4,[37,3]]]],0,[37,28],0,[[37,1],[[4,[3]]]],0,0,[[101,45],4],[[37,45],4],[[102,45],4],[[103,45],4],[[104,45],4],[[105,45],4],[[106,45],4],[[107,45],4],[[108,45],4],0,0,[37,[[4,[16,3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],[[47,[6]]]],[[],[[47,[6]]]],[[],[[47,[6]]]],[[],[[47,[6]]]],[[],[[47,[6]]]],[[],[[47,[6]]]],[[],[[47,[6]]]],[[],[[47,[6]]]],[[],[[47,[6]]]],[[37,48,49],[[4,[[51,[50]],3]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[44],[[109,110]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[44,44],[110,110],[109,109],[48,48],[[]],[[]],[[]],[[]],0,[[],111],[[],112],[[],113],[[],114],[115,116],[117,116],[118,116],[119,116],[120,116],[121,116],[122,116],[23,[[4,[44]]]],[23,[[4,[110]]]],[[110,110],10],[[109,109],10],[[]],[[]],[[[124,[[0,[123,93]]]]]],[112],[113],[114],[[44,34],35],[[110,34],35],[[109,34],35],[[98,34],35],[[48,34],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,[[4,[48]]]],[[[125,[22]]],100],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[123,[[124,[123]]]],[126,127],[[],112],[[],113],[[],114],[[]],[44],[[[124,[[0,[123,93]]]],44]],[[112,44]],[[113,44]],[[114,44]],[[]],[[127,[125,[22,109]]]],[[127,128]],[129],[130],0,0,[[],[[4,[131]]]],[[98,44],[[4,[3]]]],[[44,45],4],[[110,45],4],[116,[[4,[131]]]],0,[[],10],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],[[47,[6]]]],[[],[[47,[6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[132,133],[134,133],[135,133],[136,133],[137,133],[138,133],[[139,140,100]],[[[143,[[0,[123,93,94]],[0,[[141,[[0,[123,93,94]]]],93,94]],[0,[[142,[[0,[123,93,94]]]],93,94]]]]]],[[[143,[[0,[123,93,94]],[0,[[141,[[0,[123,93,94]]]],93,94]],[0,[[142,[[0,[123,93,94]]]],93,94]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[144,144],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[123,93,94]]],[[4,[[143,[[0,[123,93,94]],[0,[[141,[[0,[123,93,94]]]],93,94]],[0,[[142,[[0,[123,93,94]]]],93,94]]]],3]]]],[[[143,[[0,[123,93,94]],[0,[[141,[[0,[123,93,94]]]],93,94]],[0,[[142,[[0,[123,93,94]]]],93,94]]]],44]],[[139,144,[25,[6]]]],[[139,144,[31,[[146,[145]]]],140,100]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"EvaluationData"],[3,"Diagnostic"],[3,"Error"],[4,"Result"],[4,"SolutionCheckResult"],[15,"str"],[4,"SanityCheckCategory"],[4,"TaskFormat"],[3,"EvaluationConfig"],[15,"bool"],[3,"SolutionInfo"],[3,"SolutionCheck"],[4,"TestcaseEvaluationResult"],[3,"SourceFile"],[4,"ScoreStatus"],[4,"TaskInfo"],[4,"Ordering"],[3,"VALID_TAGS"],[3,"String"],[3,"Vec"],[3,"DATA_DIR"],[3,"PathBuf"],[8,"Deserializer"],[6,"FileUuid"],[8,"AsRef"],[8,"IntoIterator"],[3,"Execution"],[3,"Path"],[3,"GraderMap"],[3,"Arc"],[4,"Option"],[15,"u32"],[6,"Result"],[3,"Formatter"],[6,"Result"],[3,"IOITask"],[3,"TerryTask"],[15,"f64"],[8,"Hasher"],[8,"Into"],[3,"CodeSpan"],[4,"WriteBinTo"],[6,"ExecutionUuid"],[4,"UIMessage"],[8,"Serializer"],[3,"TypeId"],[4,"Cow"],[4,"UIType"],[3,"ExecutionDAGConfig"],[8,"UI"],[3,"Box"],[3,"Booklet"],[3,"Statement"],[3,"UIState"],[3,"BookletConfig"],[4,"Checker"],[4,"InputGenerator"],[4,"InputValidator"],[4,"OutputGenerator"],[3,"BatchTypeData"],[4,"UserIo"],[3,"CommunicationTypeData"],[4,"TaskType"],[4,"TestcaseScoreAggregator"],[3,"StatementConfig"],[3,"IOITaskInfo"],[3,"TaskInfoLimits"],[3,"TaskInfoAttachment"],[3,"TaskInfoSubtask"],[3,"TaskInfoScoring"],[3,"TaskInfoStatement"],[4,"TestcaseGenerationStatus"],[4,"TestcaseEvaluationStatus"],[3,"TestcaseGenerationState"],[3,"SubtaskGenerationState"],[3,"SolutionTestcaseEvaluationState"],[3,"SolutionSubtaskEvaluationState"],[3,"SolutionEvaluationState"],[3,"BookletDependencyState"],[3,"BookletState"],[3,"SolutionCheckOutcome"],[3,"ScoreManager"],[3,"InputValidatorGenerator"],[3,"SubtaskInfo"],[3,"TestcaseInfo"],[3,"ContestYAML"],[4,"Error"],[8,"Write"],[3,"BookletTemplate"],[6,"SubtaskId"],[15,"u64"],[8,"Fn"],[8,"Send"],[8,"Sync"],[6,"TestcaseId"],[8,"Sized"],[6,"Result"],[3,"UIMessageSender"],[3,"Mutex"],[15,"usize"],[3,"TerryTaskInfo"],[3,"SolutionOutcome"],[3,"SolutionValidation"],[3,"SolutionValidationCase"],[4,"CaseStatus"],[3,"SolutionFeedback"],[3,"SolutionFeedbackCase"],[3,"SolutionAlert"],[4,"CompilationStatus"],[4,"UIExecutionStatus"],[3,"StdoutPrinter"],[3,"JsonUI"],[3,"RawUI"],[3,"SilentUI"],[3,"RED"],[3,"ColorSpec"],[3,"SOFT_RED"],[3,"GREEN"],[3,"YELLOW"],[3,"ORANGE"],[3,"BLUE"],[3,"BOLD"],[8,"UIStateT"],[3,"PrintUI"],[3,"HashMap"],[3,"StandardStream"],[3,"FinishUIUtils"],[3,"DiagnosticContext"],[4,"ExecutionStatus"],[3,"ExecutionResourcesUsage"],[3,"Error"],[3,"GREEN"],[3,"Style"],[3,"RED"],[3,"BLUE"],[3,"YELLOW"],[3,"ORANGE"],[3,"BOLD"],[6,"FrameType"],[15,"char"],[8,"CursesDrawer"],[8,"FinishUI"],[3,"CursesUI"],[3,"Rect"],[3,"SystemTime"],[3,"ExecutorStatus"],[4,"Tag"],[8,"UISender"],[8,"WriteColor"],[13,"Done"],[13,"Failed"],[13,"Done"],[13,"Started"],[13,"IOIBookletDependency"],[13,"Diagnostic"],[13,"Compilation"],[13,"IOITestcaseScore"],[13,"IOIBooklet"],[13,"IOISubtaskScore"],[13,"IOIEvaluation"],[13,"TerrySolutionOutcome"],[13,"IOITaskScore"],[13,"TerryGeneration"],[13,"IOIChecker"],[13,"TerryValidation"],[13,"TerrySolution"],[13,"TerryChecker"],[13,"Solutions"],[13,"ServerStatus"],[13,"IOIGeneration"],[13,"IOIValidation"],[13,"IOISolution"],[13,"IOITask"],[13,"TerryTask"]]},\
"task_maker_lang":{"doc":"Crate for managing programming languages and source files.","t":"DDDDLMLLLLLLLLLLLLLMLLLLLLMMLMLLLLLLLLLMLLLLLMLMMLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLM","n":["Dependency","GraderMap","LanguageManager","SourceFile","all_paths","base_path","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","copy_exe","copy_exe","deserialize","deserialize","deserialize","detect_language","eq","executable","executable","executable","execute","file","fmt","fmt","fmt","from","from","from","from","get_compilation_deps","get_runtime_deps","grader_map","into","into","into","into","language","language","link_static","link_static","local_path","name","new","new","path","prepare","relative_path","sandbox_path","serialize","serialize","serialize","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_script_ify","type_script_ify","type_script_ify","vzip","vzip","vzip","vzip","write_bin_to","write_bin_to"],"q":[[0,"task_maker_lang"]],"d":["A dependency of an execution, all the sandbox paths must …","The storage of the compilation/runtime dependencies for …","Manager of all the known languages, you should use this to …","A source file that will be able to be executed (with an …","Return an iterator over the paths of all the graders in …","Path to the base directory (e.g. the task root), used for …","","","","","","","","","","","","","Force the executable to be copied to <code>write_bin_to</code> …","Whether to force the copy-exe option of the DAG for this …","","","","Given a path to a file guess the language that the source …","","Prepare the source file if needed and return the …","Handle to the executable after the compilation/provided …","Whether the file should be executable or not.","Execute the program relative to this source file with the …","The handle of the file.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Extra compilation dependencies of the graders, will be an …","Extra runtime dependencies of the graders, will be an …","An optional handler to the map of the graders.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The language of the source file.","Language of the source file.","Compile the source file to a statically-linked binary.","Whether this source file should be statically linked.","The path of the file on the local system.","The file name of the source file.","Make a new map with the specified graders.","Make a new <code>SourceFile</code> from the provided file. Will return …","Path to the source file.","Prepare the source file setting the <code>executable</code> and …","The path to the file, relative to the <code>base_dir</code> if …","The path inside of the sandbox of where to put the file. …","","","","","","","","","","","","","","","","","","","","","","","","","The optional destination of where to copy the executable …","Where to write the compiled executable."],"i":[0,0,0,0,1,3,25,1,3,4,25,1,3,4,3,4,3,4,3,3,1,3,4,25,4,3,3,4,3,4,1,3,4,25,1,3,4,1,1,3,25,1,3,4,3,3,3,3,4,3,1,3,3,3,3,4,1,3,4,3,4,25,1,3,4,25,1,3,4,25,1,3,4,1,3,4,25,1,3,4,3,3],"f":[0,0,0,0,[1,2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,3],[4,4],[[]],[[]],[3],0,[5,[[6,[1]]]],[5,[[6,[3]]]],[5,[[6,[4]]]],[[[8,[7]]],[[10,[[9,[0]]]]]],[[4,4],11],[[3,12],[[6,[13]]]],0,0,[[3,12,[8,[14]],[16,[15]]],[[6,[13]]]],0,[[1,17],18],[[3,17],18],[[4,17],18],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],0,0,[3],0,0,[3,15],[[[16,[[20,[19]]]]],1],[[[20,[19]],[20,[19]],[10,[[9,[1]]]],[10,[[20,[19]]]]],[[10,[3]]]],0,[[3,12],[[6,[[10,[21]],13]]]],[3,7],0,[[1,22],6],[[3,22],6],[[4,22],6],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],23],[[],23],[[],23],[[],23],[[],[[24,[14]]]],[[],[[24,[14]]]],[[],[[24,[14]]]],[[]],[[]],[[]],[[]],[3,[[10,[19]]]],0],"c":[],"p":[[3,"GraderMap"],[8,"Iterator"],[3,"SourceFile"],[3,"Dependency"],[8,"Deserializer"],[4,"Result"],[3,"Path"],[8,"AsRef"],[3,"Arc"],[4,"Option"],[15,"bool"],[3,"ExecutionDAG"],[3,"Error"],[15,"str"],[3,"String"],[3,"Vec"],[3,"Formatter"],[6,"Result"],[3,"PathBuf"],[8,"Into"],[6,"ExecutionUuid"],[8,"Serializer"],[3,"TypeId"],[4,"Cow"],[3,"LanguageManager"]]},\
"task_maker_rust":{"doc":"task-maker-rust","t":"AAAAAAAADDDLLLLLLMLMMMLMMLLLLLLMMLMMLMLMMMLLLLLLMMLLLMMMLLLFIKKKNNELLLLFFLLLLDDDDDDDDDLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMLLMMMMMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMLMMMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLFDLLLLLLLLFLLLLLLAAAAAAAAAAAAADLLLLLLLLMMMLLLLLMLFMMLLLLMLLLDLLMLLLLLLMMLLLLLLFMMMLLLLMLLLDLLLLLLMLLLLLLFLLLLLLDLLMLLLLLLMMLLLLMLLFMMLLLLLLLDLLLLMLLLLMMMLLLLMLLMFMMMMMLLLLLLLDLLLLLLLLLLLLFMLLLLLLNNNNNNNDNNNNENNLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLDLLLLLLLLLLLLLLFMLLLLLLLDLLLLLLLMLLLLLMLLFMMMMMMLLLLMLLLMDLLLLMMLLLLLLLLLLFMLLLLLLLMMDLLLLLLLLMLLLLLLMFLLLLLLLFDLLLLLLLLLLLLLLFMMMLLLLLLLM","n":["context","copy_dag","error","local","opt","remote","sandbox","tools","ConnectedExecutor","ConnectedExecutorWithUI","RuntimeContext","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client_sender","connect_executor","eval","eval","eval","execute","file_store","file_store","from","from","from","into","into","into","local_executor","local_executor","new","rx","rx","sandbox_runner","sandbox_runner","start_ui","task","task","task","try_from","try_from","try_from","try_into","try_into","try_into","tx","tx","type_id","type_id","type_id","ui_receiver","ui_receiver","ui_thread","vzip","vzip","vzip","render_dag","NiceError","nice_expect","nice_expect_with","nice_unwrap","Clean","Done","Evaluation","borrow","borrow_mut","from","into","main_local","run_evaluation","try_from","try_into","type_id","vzip","BookletOpt","ExecutionOpt","FilterOpt","FindTaskOpt","LoggerOpt","Opt","StorageOpt","TerryOpt","UIOpt","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","booklet","booklet_solutions","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clean","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","command","command","command","command","command","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","copy_dag","copy_exe","copy_logs","disable_if_needed","dry_run","enable_log","enable_log","evaluate_on","exclusive","execution","extra_memory","extra_time","filter","filter","find_task","find_task","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","into","into","into","into","into","into","into","into","into","keep_sandboxes","logger","max_cache","max_depth","min_cache","name","no_cache","no_statement","num_cores","priority","seed","should_diable_curses","skip_sanity_checks","solution","storage","store_dir","store_dir","task_dir","terry","to_config","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ui","ui","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","verbose","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","connect_to_remote_server","ToolsSandboxRunner","borrow","borrow_mut","clone","clone_into","default","fmt","from","into","main_sandbox","run","to_owned","try_from","try_into","type_id","vzip","add_solution_checks","booklet","clear","find_bad_case","fuzz_checker","gen_autocompletion","opt","reset","sandbox","server","task_info","typescriptify","worker","AddSolutionChecksOpt","augment_args","augment_args_for_update","borrow","borrow_mut","clone","clone_into","command","command_for_update","execution","filter","find_task","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","in_place","into","main_add_solution_checks","overwrite","storage","to_owned","try_from","try_into","type_id","ui","update_from_arg_matches","update_from_arg_matches_mut","vzip","BookletOpt","augment_args","augment_args_for_update","booklet_solutions","borrow","borrow_mut","clone","clone_into","command","command_for_update","contest_dir","execution","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","main_booklet","max_depth","storage","task_dir","to_owned","try_from","try_into","type_id","ui","update_from_arg_matches","update_from_arg_matches_mut","vzip","ClearOpt","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","find_task","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","main_clear","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","FindBadCaseOpt","augment_args","augment_args_for_update","batch_size","borrow","borrow_mut","clone","clone_into","command","command_for_update","execution","find_task","fmt","from","from_arg_matches","from_arg_matches_mut","generator_args","group_id","into","main_find_bad_case","solution","storage","to_owned","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","FuzzCheckerOpt","augment_args","augment_args_for_update","borrow","borrow_mut","checker_timeout","clone","clone_into","command","command_for_update","execution","extra_args","find_task","fmt","from","from_arg_matches","from_arg_matches_mut","fuzz_dir","group_id","into","jobs","main_fuzz_checker","max_time","no_build","quiet","sanitizers","storage","to_owned","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","GenAutocompletionOpt","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","main_get_autocompletion","target","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","AddSolutionChecks","Booklet","Clear","FindBadCase","FuzzChecker","GenAutocompletion","InternalSandbox","Opt","Reset","Sandbox","Server","TaskInfo","Tool","Typescriptify","Worker","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","command_for_update","fmt","fmt","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","into","into","logger","tool","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","ResetOpt","augment_args","augment_args_for_update","borrow","borrow_mut","clone","clone_into","command","command_for_update","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","main_reset","storage","to_owned","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","SandboxOpt","augment_args","augment_args_for_update","borrow","borrow_mut","clone","clone_into","command","command","command_for_update","fmt","from","from_arg_matches","from_arg_matches_mut","gid","group_id","into","main_sandbox","memory_limit","mount_proc","mount_tmpfs","readable_dirs","single_process","stack_limit","to_owned","try_from","try_into","type_id","uid","update_from_arg_matches","update_from_arg_matches_mut","vzip","workdir","ServerOpt","augment_args","augment_args_for_update","borrow","borrow_mut","client_addr","client_password","clone","clone_into","command","command_for_update","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","main_server","storage","to_owned","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","worker_addr","worker_password","TaskInfoOpt","augment_args","augment_args_for_update","borrow","borrow_mut","clone","clone_into","command","command_for_update","find_task","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","json","main_task_info","to_owned","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","main_typescriptify","WorkerOpt","augment_args","augment_args_for_update","borrow","borrow_mut","clone","clone_into","command","command_for_update","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","main_worker","name","server_addr","storage","to_owned","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","worker_id"],"q":[[0,"task_maker_rust"],[8,"task_maker_rust::context"],[59,"task_maker_rust::copy_dag"],[60,"task_maker_rust::error"],[64,"task_maker_rust::local"],[77,"task_maker_rust::opt"],[314,"task_maker_rust::remote"],[315,"task_maker_rust::sandbox"],[331,"task_maker_rust::tools"],[344,"task_maker_rust::tools::add_solution_checks"],[374,"task_maker_rust::tools::booklet"],[404,"task_maker_rust::tools::clear"],[425,"task_maker_rust::tools::find_bad_case"],[454,"task_maker_rust::tools::fuzz_checker"],[488,"task_maker_rust::tools::gen_autocompletion"],[509,"task_maker_rust::tools::opt"],[562,"task_maker_rust::tools::reset"],[586,"task_maker_rust::tools::sandbox"],[619,"task_maker_rust::tools::server"],[647,"task_maker_rust::tools::task_info"],[672,"task_maker_rust::tools::typescriptify"],[673,"task_maker_rust::tools::worker"]],"d":["This mod exposes an interface for setting up and running …","","","","","","","","Second step: connect to an executor (either local or …","Third step: start the UI thread.","First step of the execution: take a task and build the …","","","","","","","","Start the local executor or connect to a remote one.","","","","Finally, start the execution and wait until it ends or it …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a <code>RuntimeContext</code> for the given task. In the …","","","Change the default sandbox runner for the local executor.","","Now that we are connected to an executor, we can start the …","","","","","","","","","","","","","","","","","","","","","Render to string the <code>ExecutionDAG</code> in DOT format.","Adds methods for failing without panic. Like <code>expect</code> but …","Fail exiting with <code>1</code> if the value is not present, printing …","Fail exiting with <code>1</code> if the value is not present, printing …","Fail exiting with <code>1</code> if the value is not present. Otherwise …","The task directory has been cleaned.","The evaluation has completed.","The result of an evaluation.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Entry point of the local execution.","Run the local evaluation of some actions (either building …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Include the solutions in the booklet","","","","","","","","","","","","","","","","","","","Clear the task directory and exit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Store the DAG in DOT format inside of bin/DAG.dot","Copy the executables to the bin/ folder","Copy the logs of some executions to the bin/logs/ folder","Disable the Curses UI and fallback to PrintUI if verbose …","Do not write any file inside the task directory","","Enable the logs according to the specified configuration.","Run the evaluation on a remote server instead of locally","Do not run in parallel time critical executions on the …","","Give to the solution some extra memory before being killed","Give to the solution some extra time before being killed","","Execute only the solutions whose names start with the …","Use the specified options to find a task.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Keep all the sandbox directories","","Maximum size of the storage directory, in MiB","Look at most for this number of parents for searching the …","When the storage is flushed, this is the new maximum size, …","The name to use for the client in remote executions","Disable the cache for this comma separated list of tags","Do not build the statement files and the booklets","The number of CPU cores to use.","Priority of the evaluations spawned by this invocation of …","Force this seed instead of a random one.","","List of sanity checks to skip (–help for the list).","Evaluate only the solution with the specified path","","Get the store directory of this configuration. If nothing …","Where to store the storage files, including the cache","Directory of the task","","Make an <code>EvaluationConfig</code> from this command line options.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Which UI to use, available UIs are: print, raw, curses, …","","","","","","","","","","","","","","","","","","","Verbose mode (-v, -vv, -vvv, etc.). Note that it does not …","","","","","","","","","","Parse the server url address and try to connect to that …","Run the sandbox integrated in the task-maker-tools binary.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Run the sandbox for an execution.","","","","","","","","","","","","Tool that generates the autocompletion scripts inside the …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Write the @check directly to the solution files.","Calls <code>U::from(self)</code>.","","Overwrite existing @check rules.","","","","","","","","","","","","","Include the solutions in the booklet","","","","","","","Directory of the context.","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","Look at most for this number of parents for searching the …","","Directory of the task.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Number of input files to generate for each batch.","","","","","","","","","","Returns the argument unchanged.","","","Arguments to pass to the generator. The value ‘{}’ …","","Calls <code>U::from(self)</code>.","","Path to the solution to check against the official …","","","","","","","","","","","","","","Maximum number of seconds the checker can run.","","","","","","List of additional arguments to pass to the compiler.","","","Returns the argument unchanged.","","","Where to store fuzzing data.","","Calls <code>U::from(self)</code>.","Number of fuzzing process to spawn.","","Maximum fuzzing time in seconds.","Don’t run the evaluation for building the output files.","Don’t print the fuzzer output to the console, but …","Additional sanitizers to use.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","Where to write the autocompletion files","","","","","","","Add the @check comments to the solutions.","Compile just the booklet for a task or a contest.","Clear a task directory","Generate and search for an input file that make a solution …","Fuzz the checker of a task.","Generate the autocompletion files for the shell","Run the sandbox instead of the normal task-maker.","","Wipe the internal storage of task-maker","Run a command inside a sandbox similar to the one used by …","Spawn an instance of the server","Obtain the information about a task.","","Print the TypeScript type definitions","Spawn an instance of a worker","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Which tool to use","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Handler of the <code>reset</code> tool. This tool will prompt the user …","","","","","","","","","","","","","","","","","Command to execute inside the sandbox. If not specified, …","","","Returns the argument unchanged.","","","User id.","","Calls <code>U::from(self)</code>.","","Memory limit for the sandbox, in KiB.","Mount /proc inside the sandbox","Mount /tmp and /dev/null inside the sandbox","List of additional directory mounted read-only inside the …","Prevent forking.","Stack limit for the sandbox, in KiB.","","","","","User id.","","","","Working directory of the sandbox.","","","","","","Address to bind the server on for listening for the clients","Password for the connection of the clients","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Entry point for the server.","","","","","","","","","Address to bind the server on for listening for the workers","Password for the connection of the workers","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Produce JSON output.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Entry point for the worker.","The name to use for the worker in remote executions","Address to use to connect to a remote server","","","","","","","","","ID of the worker (to differentiate between multiple …"],"i":[0,0,0,0,0,0,0,0,0,0,0,1,4,7,1,4,7,7,1,1,4,7,7,4,7,1,4,7,1,4,7,4,7,1,4,7,1,1,4,1,4,7,1,4,7,1,4,7,4,7,1,4,7,1,4,7,1,4,7,0,0,57,57,57,20,20,0,20,20,20,20,0,0,20,20,20,20,0,0,0,0,0,0,0,0,0,19,22,23,24,2,3,25,26,27,19,22,23,24,2,3,25,26,27,19,27,19,22,23,24,2,3,25,26,27,19,22,23,24,2,3,25,26,27,19,22,23,24,2,3,25,26,27,22,23,24,2,3,25,26,27,19,22,23,24,2,3,25,26,27,19,22,23,24,2,3,25,26,27,2,2,2,24,2,19,22,2,19,19,2,2,19,25,23,19,19,22,23,24,2,3,25,26,27,19,22,23,24,2,3,25,26,27,19,22,23,24,2,3,25,26,27,19,22,23,24,2,3,25,26,27,19,22,23,24,2,3,25,26,27,19,22,23,24,2,3,25,26,27,2,19,3,23,3,2,2,27,2,2,26,22,19,25,19,3,3,23,19,19,22,23,24,2,3,25,26,27,19,22,23,24,2,3,25,26,27,19,22,23,24,2,3,25,26,27,19,22,23,24,2,3,25,26,27,19,24,19,22,23,24,2,3,25,26,27,19,22,23,24,2,3,25,26,27,22,19,22,23,24,2,3,25,26,27,0,0,10,10,10,10,10,10,10,10,0,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,44,44,44,44,44,44,44,44,44,44,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,45,45,45,45,45,45,45,45,45,45,45,0,46,46,46,46,46,46,46,46,46,46,46,46,46,0,46,46,46,46,46,46,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,47,47,47,47,47,47,47,47,47,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,48,48,48,48,48,48,48,48,48,48,48,48,0,49,49,49,49,49,49,49,49,49,49,49,49,0,49,49,49,49,49,49,49,51,51,51,51,51,51,51,0,51,51,51,51,0,51,51,50,50,51,51,50,51,50,51,50,51,50,51,50,51,50,51,50,51,50,51,50,51,50,51,50,50,50,51,50,51,50,51,50,51,50,51,50,51,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,52,52,52,52,52,52,52,52,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,54,54,54,54,54,54,54,54,54,54,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,55,55,55,55,55,55,55,0,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,56,56,56,56,56,56,56,56,56,56,56],"f":[0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[1,2,3],[[6,[4,5]]]],0,0,0,[7,[[6,[5]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[8,2,9],[[6,[1,5]]]],0,0,[[1,10]],0,[[4,11,[0,[12,13]]],[[6,[7,5]]]],0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,[[],14],[[],14],[[],14],0,0,0,[[]],[[]],[[]],[15,16],0,[[[0,[17,13,18]]]],[9],[[]],0,0,0,[[]],[[]],[[]],[[]],[19],[[19,[0,[12,13]]],[[6,[20,5]]]],[[],6],[[],6],[[],14],[[]],0,0,0,0,0,0,0,0,0,[21,21],[21,21],[21,21],[21,21],[21,21],[21,21],[21,21],[21,21],[21,21],[21,21],[21,21],[21,21],[21,21],[21,21],[21,21],[21,21],[21,21],[21,21],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[22,22],[23,23],[24,24],[2,2],[3,3],[25,25],[26,26],[27,27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,[[24,22]],0,[19],[22],0,0,0,0,0,0,0,[[23,28],[[6,[8,5]]]],0,[[19,29],30],[[22,29],30],[[23,29],30],[[24,29],30],[[2,29],30],[[3,29],30],[[25,29],30],[[26,29],30],[[27,29],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,[[6,[19,32]]]],[31,[[6,[22,32]]]],[31,[[6,[23,32]]]],[31,[[6,[24,32]]]],[31,[[6,[2,32]]]],[31,[[6,[3,32]]]],[31,[[6,[25,32]]]],[31,[[6,[26,32]]]],[31,[[6,[27,32]]]],[31,[[6,[19,32]]]],[31,[[6,[22,32]]]],[31,[[6,[23,32]]]],[31,[[6,[24,32]]]],[31,[[6,[2,32]]]],[31,[[6,[3,32]]]],[31,[[6,[25,32]]]],[31,[[6,[26,32]]]],[31,[[6,[27,32]]]],[[],[[34,[33]]]],[[],[[34,[33]]]],[[],[[34,[33]]]],[[],[[34,[33]]]],[[],[[34,[33]]]],[[],[[34,[33]]]],[[],[[34,[33]]]],[[],[[34,[33]]]],[[],[[34,[33]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[22,35],0,0,0,[3,36],0,0,0,[19,28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,[[19,31],[[6,[32]]]],[[22,31],[[6,[32]]]],[[23,31],[[6,[32]]]],[[24,31],[[6,[32]]]],[[2,31],[[6,[32]]]],[[3,31],[[6,[32]]]],[[25,31],[[6,[32]]]],[[26,31],[[6,[32]]]],[[27,31],[[6,[32]]]],[[19,31],[[6,[32]]]],[[22,31],[[6,[32]]]],[[23,31],[[6,[32]]]],[[24,31],[[6,[32]]]],[[2,31],[[6,[32]]]],[[3,31],[[6,[32]]]],[[25,31],[[6,[32]]]],[[26,31],[[6,[32]]]],[[27,31],[[6,[32]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[38,[37]],39],[[6,[5]]]],0,[[]],[[]],[10,10],[[]],[[],10],[[10,29],30],[[]],[[]],[[]],[[10,40,[42,[41]]],43],[[]],[[],6],[[],6],[[],14],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[21,21],[21,21],[[]],[[]],[44,44],[[]],[[],21],[[],21],0,0,0,[[44,29],30],[[]],[31,[[6,[44,32]]]],[31,[[6,[44,32]]]],[[],[[34,[33]]]],0,[[]],[[44,22],[[6,[5]]]],0,0,[[]],[[],6],[[],6],[[],14],0,[[44,31],[[6,[32]]]],[[44,31],[[6,[32]]]],[[]],0,[21,21],[21,21],0,[[]],[[]],[45,45],[[]],[[],21],[[],21],0,0,[[45,29],30],[[]],[31,[[6,[45,32]]]],[31,[[6,[45,32]]]],[[],[[34,[33]]]],[[]],[[45,22],[[6,[5]]]],0,0,0,[[]],[[],6],[[],6],[[],14],0,[[45,31],[[6,[32]]]],[[45,31],[[6,[32]]]],[[]],0,[21,21],[21,21],[[]],[[]],[[],21],[[],21],0,[[46,29],30],[[]],[31,[[6,[46,32]]]],[31,[[6,[46,32]]]],[[],[[34,[33]]]],[[]],[46,[[6,[5]]]],[[],6],[[],6],[[],14],[[46,31],[[6,[32]]]],[[46,31],[[6,[32]]]],[[]],0,[21,21],[21,21],0,[[]],[[]],[47,47],[[]],[[],21],[[],21],0,0,[[47,29],30],[[]],[31,[[6,[47,32]]]],[31,[[6,[47,32]]]],0,[[],[[34,[33]]]],[[]],[47,[[6,[5]]]],0,0,[[]],[[],6],[[],6],[[],14],[[47,31],[[6,[32]]]],[[47,31],[[6,[32]]]],[[]],0,[21,21],[21,21],[[]],[[]],0,[48,48],[[]],[[],21],[[],21],0,0,0,[[48,29],30],[[]],[31,[[6,[48,32]]]],[31,[[6,[48,32]]]],0,[[],[[34,[33]]]],[[]],0,[48,[[6,[5]]]],0,0,0,0,0,[[]],[[],6],[[],6],[[],14],[[48,31],[[6,[32]]]],[[48,31],[[6,[32]]]],[[]],0,[21,21],[21,21],[[]],[[]],[[],21],[[],21],[[49,29],30],[[]],[31,[[6,[49,32]]]],[31,[[6,[49,32]]]],[[],[[34,[33]]]],[[]],[49,[[6,[5]]]],0,[[],6],[[],6],[[],14],[[49,31],[[6,[32]]]],[[49,31],[[6,[32]]]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[21,21],[21,21],[21,21],[21,21],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[50,29],30],[[51,29],30],[[]],[[]],[31,[[6,[50,32]]]],[31,[[6,[51,32]]]],[31,[[6,[50,32]]]],[31,[[6,[51,32]]]],[[],[[34,[33]]]],[37,35],[[]],[[]],0,0,[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[50,31],[[6,[32]]]],[[51,31],[[6,[32]]]],[[50,31],[[6,[32]]]],[[51,31],[[6,[32]]]],[[]],[[]],0,[21,21],[21,21],[[]],[[]],[52,52],[[]],[[],21],[[],21],[[52,29],30],[[]],[31,[[6,[52,32]]]],[31,[[6,[52,32]]]],[[],[[34,[33]]]],[[]],[52,[[6,[5]]]],0,[[]],[[],6],[[],6],[[],14],[[52,31],[[6,[32]]]],[[52,31],[[6,[32]]]],[[]],0,[21,21],[21,21],[[]],[[]],[53,53],[[]],[[],21],0,[[],21],[[53,29],30],[[]],[31,[[6,[53,32]]]],[31,[[6,[53,32]]]],0,[[],[[34,[33]]]],[[]],[53,[[6,[5]]]],0,0,0,0,0,0,[[]],[[],6],[[],6],[[],14],0,[[53,31],[[6,[32]]]],[[53,31],[[6,[32]]]],[[]],0,0,[21,21],[21,21],[[]],[[]],0,0,[54,54],[[]],[[],21],[[],21],[[54,29],30],[[]],[31,[[6,[54,32]]]],[31,[[6,[54,32]]]],[[],[[34,[33]]]],[[]],[54,[[6,[5]]]],0,[[]],[[],6],[[],6],[[],14],[[54,31],[[6,[32]]]],[[54,31],[[6,[32]]]],[[]],0,0,0,[21,21],[21,21],[[]],[[]],[55,55],[[]],[[],21],[[],21],0,[[55,29],30],[[]],[31,[[6,[55,32]]]],[31,[[6,[55,32]]]],[[],[[34,[33]]]],[[]],0,[55,[[6,[5]]]],[[]],[[],6],[[],6],[[],14],[[55,31],[[6,[32]]]],[[55,31],[[6,[32]]]],[[]],[[],[[6,[5]]]],0,[21,21],[21,21],[[]],[[]],[56,56],[[]],[[],21],[[],21],[[56,29],30],[[]],[31,[[6,[56,32]]]],[31,[[6,[56,32]]]],[[],[[34,[33]]]],[[]],[56,[[6,[5]]]],0,0,0,[[]],[[],6],[[],6],[[],14],[[56,31],[[6,[32]]]],[[56,31],[[6,[32]]]],[[]],0],"c":[],"p":[[3,"RuntimeContext"],[3,"ExecutionOpt"],[3,"StorageOpt"],[3,"ConnectedExecutor"],[3,"Error"],[4,"Result"],[3,"ConnectedExecutorWithUI"],[4,"TaskFormat"],[8,"FnOnce"],[3,"ToolsSandboxRunner"],[4,"UIType"],[8,"FnMut"],[8,"Send"],[3,"TypeId"],[3,"ExecutionDAG"],[3,"String"],[8,"Display"],[8,"Sync"],[3,"Opt"],[4,"Evaluation"],[3,"Command"],[3,"LoggerOpt"],[3,"FindTaskOpt"],[3,"UIOpt"],[3,"FilterOpt"],[3,"TerryOpt"],[3,"BookletOpt"],[3,"EvaluationConfig"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[4,"Option"],[15,"bool"],[3,"PathBuf"],[15,"str"],[8,"AsRef"],[15,"u16"],[3,"SandboxConfiguration"],[3,"AtomicU32"],[3,"Arc"],[4,"RawSandboxResult"],[3,"AddSolutionChecksOpt"],[3,"BookletOpt"],[3,"ClearOpt"],[3,"FindBadCaseOpt"],[3,"FuzzCheckerOpt"],[3,"GenAutocompletionOpt"],[3,"Opt"],[4,"Tool"],[3,"ResetOpt"],[3,"SandboxOpt"],[3,"ServerOpt"],[3,"TaskInfoOpt"],[3,"WorkerOpt"],[8,"NiceError"]]},\
"task_maker_store":{"doc":"This crate manages the file store on disk, a folder with …","t":"DDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["FileStore","FileStoreHandle","FileStoreKey","ReadFileIterator","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","deserialize","drop","drop","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_content","from_file","get","hash","into","into","into","into","into_iter","key","new","new","next","partial_cmp","path","serialize","store","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":[[0,"task_maker_store"]],"d":["A file store will manage all the files in the store …","An handle to a specific file inside the store, until this …","Handle of a file in the <code>FileStore</code>, this must be computable …","Struct implementing the Iterator trait which will iterate …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Make a new <code>FileStoreKey</code> from an in-memory file.","Make a new <code>FileStoreKey</code> from a file on disk. The file must …","Returns an handle to the file with that key or <code>None</code> if it…","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The key of the file pointed by this handle.","Make a new iterator reading the file at that path","Make a new <code>FileStore</code> in the specified base directory, will …","","","The path to the file pointed by this handle.","","Given an iterator of <code>Vec&lt;u8&gt;</code> consume all of it writing the …","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,16,6,1,2,16,6,1,2,1,2,1,2,1,1,6,2,1,2,6,1,1,2,2,16,6,1,2,1,1,6,1,16,6,1,2,16,2,16,6,16,1,2,1,6,1,2,1,2,16,6,1,2,16,6,1,2,16,6,1,2],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[[1,1],3],[4,[[5,[1]]]],[6],[2],[[1,1],7],[[2,2],7],[[6,8],9],[[1,8],[[5,[10]]]],[[1,8],9],[[2,8],9],[[2,8],9],[[]],[[]],[[]],[[]],[[],1],[[[12,[11]]],[[5,[1,13]]]],[[6,1],[[14,[2]]]],[[1,15]],[[]],[[]],[[]],[[]],[[]],[2,1],[[[12,[11]]],[[5,[16,13]]]],[[[18,[17]],19,19],[[5,[6,13]]]],[16,14],[[1,1],[[14,[3]]]],[2,11],[[1,20],5],[[6,1,21],[[5,[2,13]]]],[[]],[[]],[[],22],[[],22],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],23],[[],23],[[],23],[[],23]],"c":[],"p":[[3,"FileStoreKey"],[3,"FileStoreHandle"],[4,"Ordering"],[8,"Deserializer"],[4,"Result"],[3,"FileStore"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Error"],[3,"Path"],[8,"AsRef"],[3,"Error"],[4,"Option"],[8,"Hasher"],[3,"ReadFileIterator"],[3,"PathBuf"],[8,"Into"],[15,"u64"],[8,"Serializer"],[8,"IntoIterator"],[3,"String"],[3,"TypeId"]]},\
"task_maker_tools":{"doc":"","t":"F","n":["main"],"q":[[0,"task_maker_tools"]],"d":[""],"i":[0],"f":[[[]]],"c":[],"p":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
