searchState.loadedDescShard("task_maker_lang", 0, "Crate for managing programming languages and source files.\nA dependency of an execution, all the sandbox paths must …\nThe storage of the compilation/runtime dependencies for …\nManager of all the known languages, you should use this to …\nA source file that will be able to be executed (with an …\nReturn an iterator over the paths of all the graders in …\nPath to the base directory (e.g. the task root), used for …\nForce the executable to be copied to <code>write_bin_to</code> …\nWhether to force the copy-exe option of the DAG for this …\nGiven a path to a file guess the language that the source …\nPrepare the source file if needed and return the …\nHandle to the executable after the compilation/provided …\nWhether the file should be executable or not.\nExecute the program relative to this source file with the …\nThe handle of the file.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nExtra compilation dependencies of the graders, will be an …\nExtra runtime dependencies of the graders, will be an …\nAn optional handler to the map of the graders.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe language of the source file.\nLanguage of the source file.\nCompile the source file to a statically-linked binary.\nWhether this source file should be statically linked.\nThe path of the file on the local system.\nThe file name of the source file.\nMake a new map with the specified graders.\nMake a new <code>SourceFile</code> from the provided file. Will return …\nPath to the source file.\nPrepare the source file setting the <code>executable</code> and …\nThe path to the file, relative to the <code>base_dir</code> if …\nThe path inside of the sandbox of where to put the file. …\nThe optional destination of where to copy the executable …\nWhere to write the compiled executable.")