searchState.loadedDescShard("task_maker_diagnostics", 0, "This crate contains the code for producing human-friendly …\nA <code>CodeSpan</code> represent a slice of code.\nA <code>Diagnostic</code> is a message, with some extra information …\nThe context that contains all the emitted diagnostic …\nThe level of the message.\nThe message is an error.\nThe message is just a warning.\nAdd a new <code>Diagnostic</code> to this context.\nGet the content of the span as a <code>&amp;str</code>.\nReturn a human-friendly version of this level.\nThe color in which this message should be printed.\nReturn the list of diagnostics.\nCreate a new <code>Diagnostic</code> with <code>DiagnosticLevel::Error</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new <code>CodeSpan</code> from the content of a file, and the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the level of the diagnostic.\nGet the 1-based line number of this span.\nGet the message of this diagnostic.\nBuild a new, empty, <code>DiagnosticContext</code>.\nPrint this diagnostic to the formatter. This is used by …\nObtain a string (with colors) of this span.\nCreate a new <code>Diagnostic</code> with <code>DiagnosticLevel::Warning</code>.\nAttach a <code>CodeSpan</code> to the diagnostic.\nAttach a help message to the diagnostic.\nAttach a file to the diagnostic.\nAttach a note to the diagnostic.")